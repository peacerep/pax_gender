{
  "version": 3,
  "file": "bundle.css",
  "sources": [
    "LayerCake.svelte",
    "Html.svelte",
    "ScaledSvg.svelte",
    "Svg.svelte",
    "ChevronIcon.svelte",
    "ClearIcon.svelte",
    "LoadingIcon.svelte",
    "Select.svelte",
    "App.svelte",
    "Header.svelte",
    "Scroller.svelte",
    "Area.svelte",
    "BackgroundRectangle.svelte",
    "Canvas.svelte",
    "Circle.svelte",
    "Dendrogram.svelte",
    "Geography.svelte",
    "IndividualRectangle.svelte",
    "Rectangles.svelte",
    "Stages.svelte",
    "Timeline.svelte"
  ],
  "sourcesContent": [
    "<!--\n\t@component\n\tLayer Cake component\n -->\n<script>\n\timport { setContext, onMount } from 'svelte';\n\timport { writable, derived } from 'svelte/store';\n\n\timport makeAccessor from './utils/makeAccessor.js';\n\timport filterObject from './utils/filterObject.js';\n\timport debounce from './utils/debounce.js';\n\n\timport calcScaleExtents from './helpers/calcScaleExtents.js';\n\timport calcDomain from './helpers/calcDomain.js';\n\timport createScale from './helpers/createScale.js';\n\timport createGetter from './helpers/createGetter.js';\n\timport getRange from './helpers/getRange.js';\n\timport printDebug from './helpers/printDebug.js';\n\n\timport defaultScales from './settings/defaultScales.js';\n\n\tconst printDebug_debounced = debounce(printDebug, 200);\n\n\t/** @type {Boolean} [ssr=false] Whether this chart should be rendered server side. */\n\texport let ssr = false;\n\t/** @type {Boolean} [pointerEvents=true] Whether to allow pointer events via CSS. Set this to `false` to set `pointer-events: none;` on all components, disabling all mouse interaction. */\n\texport let pointerEvents = true;\n\t/** @type {String} [position='relative'] Determine the positioning of the wrapper div. Set this to `'absolute'` when you want to stack cakes. */\n\texport let position = 'relative';\n\t/** @type {Boolean} [percentRange=false] If `true`, set all scale ranges to `[0, 100]`. Ranges reversed via `xReverse`, `yReverse`, `zReverse` or `rReverse` props will continue to be reversed as usual. */\n\texport let percentRange = false;\n\n\t/** @type {Number} [width=containerWidth] Override the automated width. */\n\texport let width = undefined;\n\t/** @type {Number} [height=containerHeight] Override the automated height. */\n\texport let height = undefined;\n\n\t/** @type {Number} [containerWidth=100] The bound container width. */\n\texport let containerWidth = width || 100;\n\t/** @type {Number} [containerHeight=100] The bound container height. */\n\texport let containerHeight = height || 100;\n\n\t/**\t@type {Element} [element] The .layercake-container `<div>` tag. Useful for bindings. */\n\texport let element = undefined;\n\n\t/* --------------------------------------------\n\t * Parameters\n\t * Values that computed properties are based on and that\n\t * can be easily extended from config values\n\t *\n\t */\n\n\t/** @type {String|Function|Number|Array} x The x accessor. The key in each row of data that corresponds to the x-field. This can be a string, an accessor function, a number or an array of any combination of those types. This property gets converted to a function when you access it through the context. */\n\texport let x = undefined;\n\t/** @type {String|Function|Number|Array} y The y accessor. The key in each row of data that corresponds to the y-field. This can be a string, an accessor function, a number or an array of any combination of those types. This property gets converted to a function when you access it through the context. */\n\texport let y = undefined;\n\t/** @type {String|Function|Number|Array} z The z accessor. The key in each row of data that corresponds to the z-field. This can be a string, an accessor function, a number or an array of any combination of those types. This property gets converted to a function when you access it through the context. */\n\texport let z = undefined;\n\t/** @type {String|Function|Number|Array} r The r accessor. The key in each row of data that corresponds to the r-field. This can be a string, an accessor function, a number or an array of any combination of those types. This property gets converted to a function when you access it through the context. */\n\texport let r = undefined;\n\n\t/** @type {Array|Object} [data=[]] If `data` is not a flat array of objects and you want to use any of the scales, set a flat version of the data via the `flatData` prop. */\n\texport let data = [];\n\n\t/** @type {[min: Number|null, max: Number|null]|String[]|Number[]|Function} [xDomain] Set a min or max. For linear scales, if you want to inherit the value from the data's extent, set that value to `null`. This value can also be an array because sometimes your scales are [piecewise](https://github.com/d3/d3-scale#continuous_domain) or are a list of discrete values such as in [ordinal scales](https://github.com/d3/d3-scale#ordinal-scales), useful for color series. Set it to a function that receives the computed domain and lets you return a modified domain, useful for sorting values. */\n\texport let xDomain = undefined;\n\t/** @type {[min: Number|null, max: Number|null]|String[]|Number[]|Function} [yDomain] Set a min or max. For linear scales, if you want to inherit the value from the data's extent, set that value to `null`.  Set it to a function that receives the computed domain and lets you return a modified domain, useful for sorting values. */\n\texport let yDomain = undefined;\n\t/** @type {[min: Number|null, max: Number|null]|String[]|Number[]|Function} [zDomain] Set a min or max. For linear scales, if you want to inherit the value from the data's extent, set that value to `null`. This value can also be an array because sometimes your scales are [piecewise](https://github.com/d3/d3-scale#continuous_domain) or are a list of discrete values such as in [ordinal scales](https://github.com/d3/d3-scale#ordinal-scales), useful for color series. Set it to a function that receives the computed domain and lets you return a modified domain, useful for sorting values. */\n\texport let zDomain = undefined;\n\t/** @type {[min: Number|null, max: Number|null]|String[]|Number[]|Function} [rDomain] Set a min or max. For linear scales, if you want to inherit the value from the data's extent, set that value to `null`. This value can also be an array because sometimes your scales are [piecewise](https://github.com/d3/d3-scale#continuous_domain) or are a list of discrete values such as in [ordinal scales](https://github.com/d3/d3-scale#ordinal-scales), useful for color series. Set it to a function that receives the computed domain and lets you return a modified domain, useful for sorting values. */\n\texport let rDomain = undefined;\n\t/** @type {Boolean|Number} [xNice=false] Applies D3's [scale.nice()](https://github.com/d3/d3-scale#continuous_nice) to the x domain. */\n\texport let xNice = false;\n\t/** @type {Boolean|Number} [yNice=false] Applies D3's [scale.nice()](https://github.com/d3/d3-scale#continuous_nice) to the y domain. */\n\texport let yNice = false;\n\t/** @type {Boolean|Number} [zNice=false] Applies D3's [scale.nice()](https://github.com/d3/d3-scale#continuous_nice) to the z domain. */\n\texport let zNice = false;\n\t/** @type {Boolean} [rNice=false] Applies D3's [scale.nice()](https://github.com/d3/d3-scale#continuous_nice) to the r domain. */\n\texport let rNice = false;\n\t/** @type {[leftPixels: Number, rightPixels: Number]} [xPadding] Assign a pixel value to add to the min or max of the scale. This will increase the scales domain by the scale unit equivalent of the provided pixels. */\n\texport let xPadding = undefined;\n\t/** @type {[leftPixels: Number, rightPixels: Number]} [yPadding] Assign a pixel value to add to the min or max of the scale. This will increase the scales domain by the scale unit equivalent of the provided pixels. */\n\texport let yPadding = undefined;\n\t/** @type {[leftPixels: Number, rightPixels: Number]} [zPadding] Assign a pixel value to add to the min or max of the scale. This will increase the scales domain by the scale unit equivalent of the provided pixels. */\n\texport let zPadding = undefined;\n\t/** @type {[leftPixels: Number, rightPixels: Number]} [rPadding] Assign a pixel value to add to the min or max of the scale. This will increase the scales domain by the scale unit equivalent of the provided pixels. */\n\texport let rPadding = undefined;\n\t/** @type {Function} [xScale=d3.scaleLinear] The D3 scale that should be used for the x-dimension. Pass in an instantiated D3 scale if you want to override the default or you want to extra options. */\n\texport let xScale = defaultScales.x;\n\t/** @type {Function} [yScale=d3.scaleLinear] The D3 scale that should be used for the x-dimension. Pass in an instantiated D3 scale if you want to override the default or you want to extra options. */\n\texport let yScale = defaultScales.y;\n\t/** @type {Function} [zScale=d3.scaleLinear] The D3 scale that should be used for the x-dimension. Pass in an instantiated D3 scale if you want to override the default or you want to extra options. */\n\texport let zScale = defaultScales.z;\n\t/** @type {Function} [rScale=d3.scaleSqrt] The D3 scale that should be used for the x-dimension. Pass in an instantiated D3 scale if you want to override the default or you want to extra options. */\n\texport let rScale = defaultScales.r;\n\t/** @type {[min: Number, max: Number]|Function|String[]|Number[]} [xRange] Override the default x range of `[0, width]` by setting an array or function with argument `({ width, height})` that returns an array. Setting this prop overrides `xReverse`. This can also be a list of numbers or strings for scales with discrete ranges like [scaleThreshhold](https://github.com/d3/d3-scale#threshold-scales) or [scaleQuantize](https://github.com/d3/d3-scale#quantize-scales). */\n\texport let xRange = undefined;\n\t/** @type {[min: Number, max: Number]|Function|String[]|Number[]} [xRange] Override the default y range of `[0, height]` by setting an array or function with argument `({ width, height})` that returns an array. Setting this prop overrides `yReverse`. This can also be a list of numbers or strings for scales with discrete ranges like [scaleThreshhold](https://github.com/d3/d3-scale#threshold-scales) or [scaleQuantize](https://github.com/d3/d3-scale#quantize-scales). */\n\texport let yRange = undefined;\n\t/** @type {[min: Number, max: Number]|Function|String[]|Number[]} [zRange] Override the default z range of `[0, width]` by setting an array or function with argument `({ width, height})` that returns an array. Setting this prop overrides `zReverse`. This can also be a list of numbers or strings for scales with discrete ranges like [scaleThreshhold](https://github.com/d3/d3-scale#threshold-scales) or [scaleQuantize](https://github.com/d3/d3-scale#quantize-scales). */\n\texport let zRange = undefined;\n\t/** @type {[min: Number, max: Number]|Function|String[]|Number[]} [rRange] Override the default r range of `[1, 25]` by setting an array or function with argument `({ width, height})` that returns an array. Setting this prop overrides `rReverse`. This can also be a list of numbers or strings for scales with discrete ranges like [scaleThreshhold](https://github.com/d3/d3-scale#threshold-scales) or [scaleQuantize](https://github.com/d3/d3-scale#quantize-scales). */\n\texport let rRange = undefined;\n\t/** @type {Boolean} [xReverse=false] Reverse the default x range. By default this is `false` and the range is `[0, width]`. Ignored if you set the xRange prop. */\n\texport let xReverse = false;\n\t/** @type {Boolean} [yReverse=true] Reverse the default y range. By default this is `true` and the range is `[height, 0]` unless using an ordinal scale with a `.bandwidth` method for `yScale`. Ignored if you set the `yRange` prop. */\n\texport let yReverse = undefined\n\t/** @type {Boolean} [zReverse=false] Reverse the default z range. By default this is `false` and the range is `[0, width]`. Ignored if you set the zRange prop. */\n\texport let zReverse = false;\n\t/** @type {Boolean} [rReverse=false] Reverse the default r range. By default this is `false` and the range is `[1, 25]`. Ignored if you set the rRange prop. */\n\texport let rReverse = false;\n\t/** @type {{top?: Number, right?: Number, bottom?: Number, left?: Number}} [padding={}] The amount of padding to put around your chart. It operates like CSS box-sizing: border-box; where values are subtracted from the parent container's width and height, the same as a [D3 margin convention](https://bl.ocks.org/mbostock/3019563). */\n\texport let padding = {};\n\t/** @type {{ x?: [min: Number, max: Number], y?: [min: Number, max: Number], r?: [min: Number, max: Number], z?: [min: Number, max: Number] }} [extents] Manually set the extents of the x, y or r scale as a two-dimensional array of the min and max you want. Setting values here will skip any dynamic extent calculation of the data for that dimension. */\n\texport let extents = {};\n\n\t/** @type {Array} [flatData=data] A flat version of data. */\n\texport let flatData = undefined;\n\n\t/** @type {Object} custom Any extra configuration values you want available on the LayerCake context. This could be useful for color lookups or additional constants. */\n\texport let custom = {};\n\n\t/** @type {Boolean} debug Enable debug printing to the console. Useful to inspect your scales and dimensions. */\n\texport let debug = false;\n\n\t/**\n\t * Make this reactive\n\t */\n\t$: yReverseValue = typeof yReverse === 'undefined'\n\t\t? typeof yScale.bandwidth === 'function' ? false : true\n\t\t: yReverse;\n\n\t/* --------------------------------------------\n\t * Keep track of whether the component has mounted\n\t * This is used to emit warnings once we have measured\n\t * the container object and it doesn't have proper dimensions\n\t */\n\tlet isMounted = false;\n\tonMount(() => {\n\t\tisMounted = true;\n\t});\n\n\t/* --------------------------------------------\n\t * Preserve a copy of our passed in settings before we modify them\n\t * Return this to the user's context so they can reference things if need be\n\t * Add the active keys since those aren't on our settings object.\n\t * This is mostly an escape-hatch\n\t */\n\tconst config = {};\n\t$: if (x) config.x = x;\n\t$: if (y) config.y = y;\n\t$: if (z) config.z = z;\n\t$: if (r) config.r = r;\n\t$: if (xDomain) config.xDomain = xDomain;\n\t$: if (yDomain) config.yDomain = yDomain;\n\t$: if (zDomain) config.zDomain = zDomain;\n\t$: if (rDomain) config.rDomain = rDomain;\n\t$: if (xRange) config.xRange = xRange;\n\t$: if (yRange) config.yRange = yRange;\n\t$: if (zRange) config.zRange = zRange;\n\t$: if (rRange) config.rRange = rRange;\n\n\t/* --------------------------------------------\n\t * Make store versions of each parameter\n\t * Prefix these with `_` to keep things organized\n\t */\n\tconst _percentRange = writable(percentRange);\n\tconst _containerWidth = writable(containerWidth);\n\tconst _containerHeight = writable(containerHeight);\n\tconst _extents = writable(filterObject(extents));\n\tconst _data = writable(data);\n\tconst _flatData = writable(flatData || data);\n\tconst _padding = writable(padding);\n\tconst _x = writable(makeAccessor(x));\n\tconst _y = writable(makeAccessor(y));\n\tconst _z = writable(makeAccessor(z));\n\tconst _r = writable(makeAccessor(r));\n\tconst _xDomain = writable(xDomain);\n\tconst _yDomain = writable(yDomain);\n\tconst _zDomain = writable(zDomain);\n\tconst _rDomain = writable(rDomain);\n\tconst _xNice = writable(xNice);\n\tconst _yNice = writable(yNice);\n\tconst _zNice = writable(zNice);\n\tconst _rNice = writable(rNice);\n\tconst _xReverse = writable(xReverse);\n\tconst _yReverse = writable(yReverseValue);\n\tconst _zReverse = writable(zReverse);\n\tconst _rReverse = writable(rReverse);\n\tconst _xPadding = writable(xPadding);\n\tconst _yPadding = writable(yPadding);\n\tconst _zPadding = writable(zPadding);\n\tconst _rPadding = writable(rPadding);\n\tconst _xRange = writable(xRange);\n\tconst _yRange = writable(yRange);\n\tconst _zRange = writable(zRange);\n\tconst _rRange = writable(rRange);\n\tconst _xScale = writable(xScale);\n\tconst _yScale = writable(yScale);\n\tconst _zScale = writable(zScale);\n\tconst _rScale = writable(rScale);\n\tconst _config = writable(config);\n\tconst _custom = writable(custom);\n\n\t$: $_percentRange = percentRange;\n\t$: $_containerWidth = containerWidth;\n\t$: $_containerHeight = containerHeight;\n\t$: $_extents = filterObject(extents);\n\t$: $_data = data;\n\t$: $_flatData = flatData || data;\n\t$: $_padding = padding;\n\t$: $_x = makeAccessor(x);\n\t$: $_y = makeAccessor(y);\n\t$: $_z = makeAccessor(z);\n\t$: $_r = makeAccessor(r);\n\t$: $_xDomain = xDomain;\n\t$: $_yDomain = yDomain;\n\t$: $_zDomain = zDomain;\n\t$: $_rDomain = rDomain;\n\t$: $_xNice = xNice;\n\t$: $_yNice = yNice;\n\t$: $_zNice = zNice;\n\t$: $_rNice = rNice;\n\t$: $_xReverse = xReverse;\n\t$: $_yReverse = yReverseValue;\n\t$: $_zReverse = zReverse;\n\t$: $_rReverse = rReverse;\n\t$: $_xPadding = xPadding;\n\t$: $_yPadding = yPadding;\n\t$: $_zPadding = zPadding;\n\t$: $_rPadding = rPadding;\n\t$: $_xRange = xRange;\n\t$: $_yRange = yRange;\n\t$: $_zRange = zRange;\n\t$: $_rRange = rRange;\n\t$: $_xScale = xScale;\n\t$: $_yScale = yScale;\n\t$: $_zScale = zScale;\n\t$: $_rScale = rScale;\n\t$: $_custom = custom;\n\t$: $_config = config;\n\n\t/* --------------------------------------------\n\t * Create derived values\n\t * Suffix these with `_d`\n\t */\n\tconst activeGetters_d = derived([_x, _y, _z, _r], ([$x, $y, $z, $r]) => {\n\t\tconst obj = {};\n\t\tif ($x) {\n\t\t\tobj.x = $x;\n\t\t}\n\t\tif ($y) {\n\t\t\tobj.y = $y;\n\t\t}\n\t\tif ($z) {\n\t\t\tobj.z = $z;\n\t\t}\n\t\tif ($r) {\n\t\t\tobj.r = $r;\n\t\t}\n\t\treturn obj;\n\t});\n\n\tconst padding_d = derived([_padding, _containerWidth, _containerHeight], ([$padding]) => {\n\t\tconst defaultPadding = { top: 0, right: 0, bottom: 0, left: 0 };\n\t\treturn Object.assign(defaultPadding, $padding);\n\t});\n\n\tconst box_d = derived(\n\t\t[_containerWidth, _containerHeight, padding_d],\n\t\t([$containerWidth, $containerHeight, $padding]) => {\n\t\t\tconst b = {};\n\t\t\tb.top = $padding.top;\n\t\t\tb.right = $containerWidth - $padding.right;\n\t\t\tb.bottom = $containerHeight - $padding.bottom;\n\t\t\tb.left = $padding.left;\n\t\t\tb.width = b.right - b.left;\n\t\t\tb.height = b.bottom - b.top;\n\t\t\tif (b.width <= 0 && isMounted === true) {\n\t\t\t\tconsole.warn(\n\t\t\t\t\t'[LayerCake] Target div has zero or negative width. Did you forget to set an explicit width in CSS on the container?'\n\t\t\t\t);\n\t\t\t}\n\t\t\tif (b.height <= 0 && isMounted === true) {\n\t\t\t\tconsole.warn(\n\t\t\t\t\t'[LayerCake] Target div has zero or negative height. Did you forget to set an explicit height in CSS on the container?'\n\t\t\t\t);\n\t\t\t}\n\t\t\treturn b;\n\t\t}\n\t);\n\n\tconst width_d = derived([box_d], ([$box]) => {\n\t\treturn $box.width;\n\t});\n\n\tconst height_d = derived([box_d], ([$box]) => {\n\t\treturn $box.height;\n\t});\n\n\t/* --------------------------------------------\n\t * Calculate extents by taking the extent of the data\n\t * and filling that in with anything set by the user\n\t * Note that this is different from an \"extent\" passed\n\t * in as a domain, which can be a partial domain\n\t */\n\tconst extents_d = derived(\n\t\t[_flatData, activeGetters_d, _extents, _xScale, _yScale, _rScale, _zScale],\n\t\t([$flatData, $activeGetters, $extents, $_xScale, $_yScale, $_rScale, $_zScale]) => {\n\t\t\tconst scaleLookup = { x: $_xScale, y: $_yScale, r: $_rScale, z: $_zScale };\n\t\t\tconst getters = filterObject($activeGetters, $extents);\n\t\t\tconst activeScales = Object.fromEntries(Object.keys(getters).map((k) => [k, scaleLookup[k]]));\n\n\t\t\tif (Object.keys(getters).length > 0) {\n\t\t\t\tconst calculatedExtents = calcScaleExtents($flatData, getters, activeScales);\n\t\t\t\treturn { ...calculatedExtents, ...$extents };\n\t\t\t} else {\n\t\t\t\treturn {};\n\t\t\t}\n\t\t}\n\t);\n\n\tconst xDomain_d = derived([extents_d, _xDomain], calcDomain('x'));\n\tconst yDomain_d = derived([extents_d, _yDomain], calcDomain('y'));\n\tconst zDomain_d = derived([extents_d, _zDomain], calcDomain('z'));\n\tconst rDomain_d = derived([extents_d, _rDomain], calcDomain('r'));\n\n\tconst xScale_d = derived(\n\t\t[\n\t\t\t_xScale,\n\t\t\textents_d,\n\t\t\txDomain_d,\n\t\t\t_xPadding,\n\t\t\t_xNice,\n\t\t\t_xReverse,\n\t\t\twidth_d,\n\t\t\theight_d,\n\t\t\t_xRange,\n\t\t\t_percentRange\n\t\t],\n\t\tcreateScale('x')\n\t);\n\tconst xGet_d = derived([_x, xScale_d], createGetter);\n\n\tconst yScale_d = derived(\n\t\t[\n\t\t\t_yScale,\n\t\t\textents_d,\n\t\t\tyDomain_d,\n\t\t\t_yPadding,\n\t\t\t_yNice,\n\t\t\t_yReverse,\n\t\t\twidth_d,\n\t\t\theight_d,\n\t\t\t_yRange,\n\t\t\t_percentRange\n\t\t],\n\t\tcreateScale('y')\n\t);\n\tconst yGet_d = derived([_y, yScale_d], createGetter);\n\n\tconst zScale_d = derived(\n\t\t[\n\t\t\t_zScale,\n\t\t\textents_d,\n\t\t\tzDomain_d,\n\t\t\t_zPadding,\n\t\t\t_zNice,\n\t\t\t_zReverse,\n\t\t\twidth_d,\n\t\t\theight_d,\n\t\t\t_zRange,\n\t\t\t_percentRange\n\t\t],\n\t\tcreateScale('z')\n\t);\n\tconst zGet_d = derived([_z, zScale_d], createGetter);\n\n\tconst rScale_d = derived(\n\t\t[\n\t\t\t_rScale,\n\t\t\textents_d,\n\t\t\trDomain_d,\n\t\t\t_rPadding,\n\t\t\t_rNice,\n\t\t\t_rReverse,\n\t\t\twidth_d,\n\t\t\theight_d,\n\t\t\t_rRange,\n\t\t\t_percentRange\n\t\t],\n\t\tcreateScale('r')\n\t);\n\tconst rGet_d = derived([_r, rScale_d], createGetter);\n\n\tconst xRange_d = derived([xScale_d], getRange);\n\tconst yRange_d = derived([yScale_d], getRange);\n\tconst zRange_d = derived([zScale_d], getRange);\n\tconst rRange_d = derived([rScale_d], getRange);\n\n\tconst aspectRatio_d = derived([width_d, height_d], ([$width, $height]) => {\n\t\treturn $width / $height;\n\t});\n\n\t$: context = {\n\t\tactiveGetters: activeGetters_d,\n\t\twidth: width_d,\n\t\theight: height_d,\n\t\tpercentRange: _percentRange,\n\t\taspectRatio: aspectRatio_d,\n\t\tcontainerWidth: _containerWidth,\n\t\tcontainerHeight: _containerHeight,\n\t\tx: _x,\n\t\ty: _y,\n\t\tz: _z,\n\t\tr: _r,\n\t\tcustom: _custom,\n\t\tdata: _data,\n\t\txNice: _xNice,\n\t\tyNice: _yNice,\n\t\tzNice: _zNice,\n\t\trNice: _rNice,\n\t\txReverse: _xReverse,\n\t\tyReverse: _yReverse,\n\t\tzReverse: _zReverse,\n\t\trReverse: _rReverse,\n\t\txPadding: _xPadding,\n\t\tyPadding: _yPadding,\n\t\tzPadding: _zPadding,\n\t\trPadding: _rPadding,\n\t\tpadding: padding_d,\n\t\tflatData: _flatData,\n\t\textents: extents_d,\n\t\txDomain: xDomain_d,\n\t\tyDomain: yDomain_d,\n\t\tzDomain: zDomain_d,\n\t\trDomain: rDomain_d,\n\t\txRange: xRange_d,\n\t\tyRange: yRange_d,\n\t\tzRange: zRange_d,\n\t\trRange: rRange_d,\n\t\tconfig: _config,\n\t\txScale: xScale_d,\n\t\txGet: xGet_d,\n\t\tyScale: yScale_d,\n\t\tyGet: yGet_d,\n\t\tzScale: zScale_d,\n\t\tzGet: zGet_d,\n\t\trScale: rScale_d,\n\t\trGet: rGet_d\n\t};\n\n\t$: setContext('LayerCake', context);\n\n\t$: if ($box_d && debug === true && (ssr === true || typeof window !== 'undefined')) {\n\t\t// Call this as a debounce so that it doesn't get called multiple times as these vars get filled in\n\t\tprintDebug_debounced({\n\t\t\tboundingBox: $box_d,\n\t\t\tactiveGetters: $activeGetters_d,\n\t\t\tx: config.x,\n\t\t\ty: config.y,\n\t\t\tz: config.z,\n\t\t\tr: config.r,\n\t\t\txScale: $xScale_d,\n\t\t\tyScale: $yScale_d,\n\t\t\tzScale: $zScale_d,\n\t\t\trScale: $rScale_d,\n\t\t});\n\t}\n</script>\n\n{#if ssr === true || typeof window !== 'undefined'}\n\t<div\n\t\tbind:this={element}\n\t\tclass=\"layercake-container\"\n\t\tstyle:position\n\t\tstyle:top={position === 'absolute' ? '0' : null}\n\t\tstyle:right={position === 'absolute' ? '0' : null}\n\t\tstyle:bottom={position === 'absolute' ? '0' : null}\n\t\tstyle:left={position === 'absolute' ? '0' : null}\n\t\tstyle:pointer-events={pointerEvents === false ? 'none' : null}\n\t\tbind:clientWidth={containerWidth}\n\t\tbind:clientHeight={containerHeight}\n\t>\n\t\t<slot\n\t\t\t{element}\n\t\t\twidth={$width_d}\n\t\t\theight={$height_d}\n\t\t\taspectRatio={$aspectRatio_d}\n\t\t\tcontainerWidth={$_containerWidth}\n\t\t\tcontainerHeight={$_containerHeight}\n\t\t\tactiveGetters={$activeGetters_d}\n\t\t\tpercentRange={$_percentRange}\n\t\t\tx={$_x}\n\t\t\ty={$_y}\n\t\t\tz={$_z}\n\t\t\tr={$_r}\n\t\t\tcustom={$_custom}\n\t\t\tdata={$_data}\n\t\t\txNice={$_xNice}\n\t\t\tyNice={$_yNice}\n\t\t\tzNice={$_zNice}\n\t\t\trNice={$_rNice}\n\t\t\txReverse={$_xReverse}\n\t\t\tyReverse={$_yReverse}\n\t\t\tzReverse={$_zReverse}\n\t\t\trReverse={$_rReverse}\n\t\t\txPadding={$_xPadding}\n\t\t\tyPadding={$_yPadding}\n\t\t\tzPadding={$_zPadding}\n\t\t\trPadding={$_rPadding}\n\t\t\tpadding={$padding_d}\n\t\t\tflatData={$_flatData}\n\t\t\textents={$extents_d}\n\t\t\txDomain={$xDomain_d}\n\t\t\tyDomain={$yDomain_d}\n\t\t\tzDomain={$zDomain_d}\n\t\t\trDomain={$rDomain_d}\n\t\t\txRange={$xRange_d}\n\t\t\tyRange={$yRange_d}\n\t\t\tzRange={$zRange_d}\n\t\t\trRange={$rRange_d}\n\t\t\tconfig={$_config}\n\t\t\txScale={$xScale_d}\n\t\t\txGet={$xGet_d}\n\t\t\tyScale={$yScale_d}\n\t\t\tyGet={$yGet_d}\n\t\t\tzScale={$zScale_d}\n\t\t\tzGet={$zGet_d}\n\t\t\trScale={$rScale_d}\n\t\t\trGet={$rGet_d}\n\t\t/>\n\t</div>\n{/if}\n\n<style>\n\t.layercake-container,\n\t.layercake-container :global(*) {\n\t\tbox-sizing: border-box;\n\t}\n\t.layercake-container {\n\t\twidth: 100%;\n\t\theight: 100%;\n\t}\n</style>\n",
    "<!--\n\t@component\n\tHTML layout component\n -->\n<script>\n\timport { getContext } from 'svelte';\n\n\tconst { padding } = getContext('LayerCake');\n\n\t/** @type {Element} [element] The layer's outermost `<div>` tag. Useful for bindings. */\n\texport let element = undefined;\n\n\t/** @type {Number} [zIndex] The layer's z-index. */\n\texport let zIndex = undefined;\n\n\t/** @type {Boolean} [pointerEvents] Set this to `false` to set `pointer-events: none;` on the entire layer. */\n\texport let pointerEvents = undefined;\n\n\t/** @type {String} [role] A string passed to the `aria-role` on the `<div>` tag. This is `undefined` by default but will be set by default to `'figure'` if `label`, `labelledby` or `describedby` is set. That default will be overridden by whatever is passed in. */\n\texport let role = undefined;\n\n\t/** @type {String} [label] A string passed to the `aria-label` on the `<div>` tag. */\n\texport let label = undefined;\n\n\t/** @type {String} [labelledBy] A string passed to the `aria-labelledby` on the `<div>` tag. */\n\texport let labelledBy = undefined;\n\n\t/** @type {String} [describedBy] A string passed to `aria-describedby` property on the `<div>` tag. */\n\texport let describedBy = undefined;\n\n\t$: roleVal = role || (label || labelledBy || describedBy ? 'figure' : undefined);\n</script>\n\n<div\n\tbind:this={element}\n\tclass=\"layercake-layout-html\"\n\tstyle:z-index={zIndex}\n\tstyle:pointer-events={pointerEvents === false ? 'none' : null}\n\tstyle:top={$padding.top + 'px'}\n\tstyle:right={$padding.right + 'px'}\n\tstyle:bottom={$padding.bottom + 'px'}\n\tstyle:left={$padding.left + 'px'}\n\trole={roleVal}\n\taria-label={label}\n\taria-labelledby={labelledBy}\n\taria-describedby={describedBy}\n>\n\t<slot {element}></slot>\n</div>\n\n<style>\n\tdiv,\n\tslot {\n\t\tposition: absolute;\n\t\ttop: 0;\n\t\tleft: 0;\n\t}\n</style>\n",
    "<!--\n\t@component\n\tScaled SVG layout component\n -->\n<script>\n\timport { getContext } from 'svelte';\n\n\tconst { padding } = getContext('LayerCake');\n\n\t/** @type {Element} [element] The layer's `<svg>` tag. Useful for bindings. */\n\texport let element = undefined;\n\n\t/** @type {Number} [zIndex] The layer's z-index. */\n\texport let zIndex = undefined;\n\n\t/** @type {Boolean} [pointerEvents] Set this to `false` to set `pointer-events: none;` on the entire layer. */\n\texport let pointerEvents = undefined;\n\n\t/** @type {Number} [fixedAspectRatio=1`] A number to set the aspect ratio onto the viewBox. */\n\texport let fixedAspectRatio = 1;\n\n\t/** @type {String} [viewBox=`0 0 100 ${100 / fixedAspectRatio}`] A string passed to the `viewBox` property on the `<svg>` tag. */\n\texport let viewBox = `0 0 100 ${100 / fixedAspectRatio}`;\n\t$: viewBox = `0 0 100 ${100 / fixedAspectRatio}`;\n\n\t/** @type {String} [label] A string passed to the `aria-label` on the `<svg>` tag. */\n\texport let label = undefined;\n\n\t/** @type {String} [labelledBy] A string passed to the `aria-labelledby` on the `<svg>` tag. */\n\texport let labelledBy = undefined;\n\n\t/** @type {String} [describedBy] A string passed to `aria-describedby` property on the `<svg>` tag. */\n\texport let describedBy = undefined;\n\n\t/** @type {String} [title] Shorthand to set the contents of `<title></title>` for accessibility. You can also set arbitrary HTML via the \"title\" slot but this is a convenient shorthand. If you use the \"title\" slot, this prop is ignored. */\n\texport let title = undefined;\n</script>\n\n<svg\n\tbind:this={element}\n\t{viewBox}\n\tpreserveAspectRatio=\"none\"\n\tstyle:z-index={zIndex}\n\tstyle:pointer-events={pointerEvents === false ? 'none' : null}\n\tstyle:top={$padding.top + 'px'}\n\tstyle:left={$padding.left + 'px'}\n\tstyle:width={`calc(100% - ${($padding.left + $padding.right)}px)`}\n\tstyle:height={`calc(100% - ${($padding.top + $padding.bottom)}px)`}\n\tstyle=\"right:0px; bottom:0px;\"\n\taria-label={label}\n\taria-labelledby={labelledBy}\n\taria-describedby={describedBy}\n>\n\t<slot name=\"title\">{#if title}<title>{title}</title>{/if}</slot>\n\n\t<defs>\n\t\t<slot name=\"defs\"></slot>\n\t</defs>\n\n\t<slot {element}></slot>\n</svg>\n\n<style>\n\tsvg {\n\t\tposition: absolute;\n\t\twidth: 100%;\n\t\theight: 100%;\n\t\toverflow: visible;\n\t}\n\tsvg :global(*) {\n\t\tvector-effect: non-scaling-stroke;\n\t}\n</style>\n",
    "<!--\n\t@component\n\tSVG layout component\n -->\n<script>\n\timport { getContext } from 'svelte';\n\n\t/** @type {Element} [element] The layer's `<svg>` tag. Useful for bindings. */\n\texport let element = undefined;\n\n\t/** @type {Element} [innerElement] The layer's `<g>` tag. Useful for bindings. */\n\texport let innerElement = undefined;\n\n\t/** @type {Number} [zIndex] The layer's z-index. */\n\texport let zIndex = undefined;\n\n\t/** @type {Boolean} [pointerEvents] Set this to `false` to set `pointer-events: none;` on the entire layer. */\n\texport let pointerEvents = undefined;\n\n\t/** @type {String} [viewBox] A string passed to the `viewBox` property on the `<svg>` tag. */\n\texport let viewBox = undefined;\n\n\t/** @type {String} [label] A string passed to the `aria-label` property on the `<svg>` tag. */\n\texport let label = undefined;\n\n\t/** @type {String} [labelledBy] A string passed to the `aria-labelledby property` on the `<svg>` tag. */\n\texport let labelledBy = undefined;\n\n\t/** @type {String} [describedBy] A string passed to the `aria-describedby` property on the `<svg>` tag. */\n\texport let describedBy = undefined;\n\n\t/** @type {String} [title] Shorthand to set the contents of `<title></title>` for accessibility. You can also set arbitrary HTML via the \"title\" slot but this is a convenient shorthand. If you use the \"title\" slot, this prop is ignored. */\n\texport let title = undefined;\n\n\tconst { containerWidth, containerHeight, padding } = getContext('LayerCake');\n</script>\n\n<svg\n\tbind:this={element}\n\tclass=\"layercake-layout-svg\"\n\t{viewBox}\n\twidth={$containerWidth}\n\theight={$containerHeight}\n\tstyle:z-index={zIndex}\n\tstyle:pointer-events={pointerEvents === false ? 'none' : null}\n\taria-label={label}\n\taria-labelledby={labelledBy}\n\taria-describedby={describedBy}\n>\n\t<slot name=\"title\">{#if title}<title>{title}</title>{/if}</slot>\n\n\t<defs>\n\t\t<slot name=\"defs\"></slot>\n\t</defs>\n\t<g\n\t\tbind:this={innerElement}\n\t\tclass=\"layercake-layout-svg_g\"\n\t\ttransform=\"translate({$padding.left}, {$padding.top})\">\n\t\t<slot {element}></slot>\n\t</g>\n</svg>\n\n<style>\n\tsvg {\n\t\tposition: absolute;\n\t\ttop: 0;\n\t\tleft: 0;\n\t\toverflow: visible;\n\t}\n</style>\n",
    "<svg\n    width=\"100%\"\n    height=\"100%\"\n    viewBox=\"0 0 20 20\"\n    focusable=\"false\"\n    aria-hidden=\"true\">\n    <path\n    fill=\"currentColor\"\n        d=\"M4.516 7.548c0.436-0.446 1.043-0.481 1.576 0l3.908 3.747\n          3.908-3.747c0.533-0.481 1.141-0.446 1.574 0 0.436 0.445 0.408 1.197 0\n          1.615-0.406 0.418-4.695 4.502-4.695 4.502-0.217 0.223-0.502\n          0.335-0.787 0.335s-0.57-0.112-0.789-0.335c0\n          0-4.287-4.084-4.695-4.502s-0.436-1.17 0-1.615z\" />\n</svg>\n\n<style>\n  svg {\n      width: var(--chevron-icon-width, 20px);\n      height: var(--chevron-icon-width, 20px);\n      color: var(--chevron-icon-colour, currentColor);\n  }\n</style>",
    "<svg\n    width=\"100%\"\n    height=\"100%\"\n    viewBox=\"-2 -2 50 50\"\n    focusable=\"false\"\n    aria-hidden=\"true\"\n    role=\"presentation\"\n>\n    <path\n        fill=\"currentColor\"\n        d=\"M34.923,37.251L24,26.328L13.077,37.251L9.436,33.61l10.923-10.923L9.436,11.765l3.641-3.641L24,19.047L34.923,8.124\n    l3.641,3.641L27.641,22.688L38.564,33.61L34.923,37.251z\"\n    />\n</svg>\n\n<style>\n    svg {\n        width: var(--clear-icon-width, 20px);\n        height: var(--clear-icon-width, 20px);\n        color: var(--clear-icon-color, currentColor);\n    }\n</style>",
    "<svg class=\"loading\" viewBox=\"25 25 50 50\">\n    <circle\n        class=\"circle_path\"\n        cx=\"50\"\n        cy=\"50\"\n        r=\"20\"\n        fill=\"none\"\n        stroke=\"currentColor\"\n        stroke-width=\"5\"\n        stroke-miterlimit=\"10\" />\n</svg>\n\n<style>\n    .loading {\n        width: var(--spinner-width, 20px);\n        height: var(--spinner-height, 20px);\n        color: var(--spinner-color, var(--icons-color));\n        animation: rotate 0.75s linear infinite;\n        transform-origin: center center;\n        transform: none;\n    }\n\n    .circle_path {\n        stroke-dasharray: 90;\n        stroke-linecap: round;\n    }\n\n    @keyframes rotate {\n        100% {\n            transform: rotate(360deg);\n        }\n    }\n</style>",
    "<script>\n    import { beforeUpdate, createEventDispatcher, onDestroy, onMount } from 'svelte';\n    import { offset, flip, shift } from 'svelte-floating-ui/dom';\n    import { createFloatingActions } from 'svelte-floating-ui';\n\n    const dispatch = createEventDispatcher();\n\n    import _filter from './filter';\n    import _getItems from './get-items';\n\n    import ChevronIcon from './ChevronIcon.svelte';\n    import ClearIcon from './ClearIcon.svelte';\n    import LoadingIcon from './LoadingIcon.svelte';\n\n    export let justValue = null; // read-only\n\n    export let filter = _filter;\n    export let getItems = _getItems;\n\n    export let id = null;\n    export let name = null;\n    export let container = undefined;\n    export let input = undefined;\n    export let multiple = false;\n    export let multiFullItemClearable = false;\n    export let disabled = false;\n    export let focused = false;\n    export let value = null;\n    export let filterText = '';\n    export let placeholder = 'Please select';\n    export let placeholderAlwaysShow = false;\n    export let items = null;\n    export let label = 'label';\n    export let itemFilter = (label, filterText, option) => `${label}`.toLowerCase().includes(filterText.toLowerCase());\n    export let groupBy = undefined;\n    export let groupFilter = (groups) => groups;\n    export let groupHeaderSelectable = false;\n    export let itemId = 'value';\n    export let loadOptions = undefined;\n    export let containerStyles = '';\n    export let hasError = false;\n    export let filterSelectedItems = true;\n    export let required = false;\n    export let closeListOnChange = true;\n    export let clearFilterTextOnBlur = true;\n\n    export let createGroupHeaderItem = (groupValue, item) => {\n        return {\n            value: groupValue,\n            [label]: groupValue,\n        };\n    };\n\n    export const getFilteredItems = () => {\n        return filteredItems;\n    };\n\n    export let searchable = true;\n    export let inputStyles = '';\n    export let clearable = true;\n    export let loading = false;\n    export let listOpen = false;\n\n    let timeout;\n    export let debounce = (fn, wait = 1) => {\n        clearTimeout(timeout);\n        timeout = setTimeout(fn, wait);\n    };\n\n    export let debounceWait = 300;\n    export let hideEmptyState = false;\n    export let inputAttributes = {};\n    export let listAutoWidth = true;\n    export let showChevron = false;\n    export let listOffset = 5;\n    export let hoverItemIndex = 0;\n    export let floatingConfig = {};\n\n    export { containerClasses as class };\n\n    let containerClasses = '';\n    let activeValue;\n    let prev_value;\n    let prev_filterText;\n    let prev_multiple;\n\n    function setValue() {\n        if (typeof value === 'string') {\n            let item = (items || []).find((item) => item[itemId] === value);\n            value = item || {\n                [itemId]: value,\n                label: value,\n            };\n        } else if (multiple && Array.isArray(value) && value.length > 0) {\n            value = value.map((item) => (typeof item === 'string' ? { value: item, label: item } : item));\n        }\n    }\n\n    let _inputAttributes;\n    function assignInputAttributes() {\n        _inputAttributes = Object.assign(\n            {\n                autocapitalize: 'none',\n                autocomplete: 'off',\n                autocorrect: 'off',\n                spellcheck: false,\n                tabindex: 0,\n                type: 'text',\n                'aria-autocomplete': 'list',\n            },\n            inputAttributes\n        );\n\n        if (id) {\n            _inputAttributes['id'] = id;\n        }\n\n        if (!searchable) {\n            _inputAttributes['readonly'] = true;\n        }\n    }\n\n    function convertStringItemsToObjects(_items) {\n        return _items.map((item, index) => {\n            return {\n                index,\n                value: item,\n                label: `${item}`,\n            };\n        });\n    }\n\n    function filterGroupedItems(_items) {\n        const groupValues = [];\n        const groups = {};\n\n        _items.forEach((item) => {\n            const groupValue = groupBy(item);\n\n            if (!groupValues.includes(groupValue)) {\n                groupValues.push(groupValue);\n                groups[groupValue] = [];\n\n                if (groupValue) {\n                    groups[groupValue].push(\n                        Object.assign(createGroupHeaderItem(groupValue, item), {\n                            id: groupValue,\n                            groupHeader: true,\n                            selectable: groupHeaderSelectable,\n                        })\n                    );\n                }\n            }\n\n            groups[groupValue].push(Object.assign({ groupItem: !!groupValue }, item));\n        });\n\n        const sortedGroupedItems = [];\n\n        groupFilter(groupValues).forEach((groupValue) => {\n            if (groups[groupValue]) sortedGroupedItems.push(...groups[groupValue]);\n        });\n\n        return sortedGroupedItems;\n    }\n\n    function dispatchSelectedItem() {\n        if (multiple) {\n            if (JSON.stringify(value) !== JSON.stringify(prev_value)) {\n                if (checkValueForDuplicates()) {\n                    dispatch('input', value);\n                }\n            }\n            return;\n        }\n\n        if (!prev_value || JSON.stringify(value[itemId]) !== JSON.stringify(prev_value[itemId])) {\n            dispatch('input', value);\n        }\n    }\n\n    function setupMulti() {\n        if (value) {\n            if (Array.isArray(value)) {\n                value = [...value];\n            } else {\n                value = [value];\n            }\n        }\n    }\n\n    function setupSingle() {\n        if (value) value = null;\n    }\n\n    $: if ((items, value)) setValue();\n    $: if (inputAttributes || !searchable) assignInputAttributes();\n    $: if (multiple) setupMulti();\n    $: if (prev_multiple && !multiple) setupSingle();\n    $: if (multiple && value && value.length > 1) checkValueForDuplicates();\n    $: if (value) dispatchSelectedItem();\n    $: if (!value && multiple && prev_value) dispatch('input', value);\n    $: if (!focused && input) closeList();\n    $: if (filterText !== prev_filterText) setupFilterText();\n    $: if (!multiple && listOpen && value && filteredItems) setValueIndexAsHoverIndex();\n    $: dispatchHover(hoverItemIndex);\n\n    function setValueIndexAsHoverIndex() {\n        const valueIndex = filteredItems.findIndex((i) => {\n            return i[itemId] === value[itemId];\n        });\n\n        checkHoverSelectable(valueIndex, true);\n    }\n\n    function dispatchHover(i) {\n        dispatch('hoverItem', i);\n    }\n\n    function checkHoverSelectable(startingIndex = 0, ignoreGroup) {\n        hoverItemIndex = startingIndex < 0 ? 0 : startingIndex;\n        if (!ignoreGroup && groupBy && filteredItems[hoverItemIndex] && !filteredItems[hoverItemIndex].selectable) {\n            setHoverIndex(1);\n        }\n    }\n\n    function setupFilterText() {\n        if (!loadOptions && filterText.length === 0) return;\n\n        if (loadOptions) {\n            debounce(async function () {\n                loading = true;\n                let res = await getItems({\n                    dispatch,\n                    loadOptions,\n                    convertStringItemsToObjects,\n                    filterText,\n                });\n\n                if (res) {\n                    loading = res.loading;\n                    listOpen = listOpen ? res.listOpen : filterText.length > 0 ? true : false;\n                    focused = listOpen && res.focused;\n                    items = groupBy ? filterGroupedItems(res.filteredItems) : res.filteredItems;\n                } else {\n                    loading = false;\n                    focused = true;\n                    listOpen = true;\n                }\n            }, debounceWait);\n        } else {\n            listOpen = true;\n\n            if (multiple) {\n                activeValue = undefined;\n            }\n        }\n    }\n\n    $: hasValue = multiple ? value && value.length > 0 : value;\n    $: hideSelectedItem = hasValue && filterText.length > 0;\n    $: showClear = hasValue && clearable && !disabled && !loading;\n    $: placeholderText =\n        placeholderAlwaysShow && multiple\n            ? placeholder\n            : multiple && value?.length === 0\n            ? placeholder\n            : value\n            ? ''\n            : placeholder;\n    $: ariaSelection = value ? handleAriaSelection(multiple) : '';\n    $: ariaContext = handleAriaContent({ filteredItems, hoverItemIndex, focused, listOpen });\n    $: updateValueDisplay(items);\n    $: justValue = computeJustValue(multiple, value, itemId);\n    $: if (!multiple && prev_value && !value) dispatch('input', value);\n    $: filteredItems = filter({\n        loadOptions,\n        filterText,\n        items,\n        multiple,\n        value,\n        itemId,\n        groupBy,\n        label,\n        filterSelectedItems,\n        itemFilter,\n        convertStringItemsToObjects,\n        filterGroupedItems,\n    });\n    $: if (listOpen && filteredItems && !multiple && !value) checkHoverSelectable();\n    $: handleFilterEvent(filteredItems);\n    $: if (container && floatingConfig) floatingUpdate(Object.assign(_floatingConfig, floatingConfig));\n    $: listDom = !!list;\n    $: listMounted(list, listOpen);\n    $: if (listOpen && container && list) setListWidth();\n    $: scrollToHoverItem = hoverItemIndex;\n    $: if (listOpen && multiple) hoverItemIndex = 0;\n    $: if (input && listOpen && !focused) handleFocus();\n    $: if (filterText) hoverItemIndex = 0;\n\n    function handleFilterEvent(items) {\n        if (listOpen) dispatch('filter', items);\n    }\n\n    beforeUpdate(async () => {\n        prev_value = value;\n        prev_filterText = filterText;\n        prev_multiple = multiple;\n    });\n\n    function computeJustValue() {\n        if (multiple) return value ? value.map((item) => item[itemId]) : null;\n        return value ? value[itemId] : value;\n    }\n\n    function checkValueForDuplicates() {\n        let noDuplicates = true;\n        if (value) {\n            const ids = [];\n            const uniqueValues = [];\n\n            value.forEach((val) => {\n                if (!ids.includes(val[itemId])) {\n                    ids.push(val[itemId]);\n                    uniqueValues.push(val);\n                } else {\n                    noDuplicates = false;\n                }\n            });\n\n            if (!noDuplicates) value = uniqueValues;\n        }\n        return noDuplicates;\n    }\n\n    function findItem(selection) {\n        let matchTo = selection ? selection[itemId] : value[itemId];\n        return items.find((item) => item[itemId] === matchTo);\n    }\n\n    function updateValueDisplay(items) {\n        if (!items || items.length === 0 || items.some((item) => typeof item !== 'object')) return;\n        if (!value || (multiple ? value.some((selection) => !selection || !selection[itemId]) : !value[itemId])) return;\n\n        if (Array.isArray(value)) {\n            value = value.map((selection) => findItem(selection) || selection);\n        } else {\n            value = findItem() || value;\n        }\n    }\n\n    async function handleMultiItemClear(i) {\n        const itemToRemove = value[i];\n\n        if (value.length === 1) {\n            value = undefined;\n        } else {\n            value = value.filter((item) => {\n                return item !== itemToRemove;\n            });\n        }\n\n        dispatch('clear', itemToRemove);\n    }\n\n    function handleKeyDown(e) {\n        if (!focused) return;\n        e.stopPropagation();\n        switch (e.key) {\n            case 'Escape':\n                e.preventDefault();\n                closeList();\n                break;\n            case 'Enter':\n                e.preventDefault();\n\n                if (listOpen) {\n                    if (filteredItems.length === 0) break;\n                    const hoverItem = filteredItems[hoverItemIndex];\n\n                    if (value && !multiple && value[itemId] === hoverItem[itemId]) {\n                        closeList();\n                        break;\n                    } else {\n                        handleSelect(filteredItems[hoverItemIndex]);\n                    }\n                }\n\n                break;\n            case 'ArrowDown':\n                e.preventDefault();\n\n                if (listOpen) {\n                    setHoverIndex(1);\n                } else {\n                    listOpen = true;\n                    activeValue = undefined;\n                }\n\n                break;\n            case 'ArrowUp':\n                e.preventDefault();\n\n                if (listOpen) {\n                    setHoverIndex(-1);\n                } else {\n                    listOpen = true;\n                    activeValue = undefined;\n                }\n\n                break;\n            case 'Tab':\n                if (listOpen && focused) {\n                    if (\n                        filteredItems.length === 0 ||\n                        (value && value[itemId] === filteredItems[hoverItemIndex][itemId])\n                    )\n                        return closeList();\n\n                    e.preventDefault();\n                    handleSelect(filteredItems[hoverItemIndex]);\n                    closeList();\n                }\n\n                break;\n            case 'Backspace':\n                if (!multiple || filterText.length > 0) return;\n\n                if (multiple && value && value.length > 0) {\n                    handleMultiItemClear(activeValue !== undefined ? activeValue : value.length - 1);\n                    if (activeValue === 0 || activeValue === undefined) break;\n                    activeValue = value.length > activeValue ? activeValue - 1 : undefined;\n                }\n\n                break;\n            case 'ArrowLeft':\n                if (!value || !multiple || filterText.length > 0) return;\n                if (activeValue === undefined) {\n                    activeValue = value.length - 1;\n                } else if (value.length > activeValue && activeValue !== 0) {\n                    activeValue -= 1;\n                }\n                break;\n            case 'ArrowRight':\n                if (!value || !multiple || filterText.length > 0 || activeValue === undefined) return;\n                if (activeValue === value.length - 1) {\n                    activeValue = undefined;\n                } else if (activeValue < value.length - 1) {\n                    activeValue += 1;\n                }\n                break;\n        }\n    }\n\n    function handleFocus(e) {\n        if (focused && input === document?.activeElement) return;\n        if (e) dispatch('focus', e);\n        input?.focus();\n        focused = true;\n    }\n\n    async function handleBlur(e) {\n        if (isScrolling) return;\n        if (listOpen || focused) {\n            dispatch('blur', e);\n            closeList();\n            focused = false;\n            activeValue = undefined;\n            input?.blur();\n        }\n    }\n\n    function handleClick() {\n        if (disabled) return;\n        if (filterText.length > 0) return listOpen = true;\n        listOpen = !listOpen;\n    }\n\n    export function handleClear() {\n        dispatch('clear', value);\n        value = undefined;\n        closeList();\n        handleFocus();\n    }\n\n    onMount(() => {\n        if (listOpen) focused = true;\n        if (focused && input) input.focus();\n    });\n\n    function itemSelected(selection) {\n        if (selection) {\n            filterText = '';\n            const item = Object.assign({}, selection);\n\n            if (item.groupHeader && !item.selectable) return;\n            value = multiple ? (value ? value.concat([item]) : [item]) : (value = item);\n\n            setTimeout(() => {\n                if (closeListOnChange) closeList();\n                activeValue = undefined;\n                dispatch('change', value);\n                dispatch('select', selection);\n            });\n        }\n    }\n\n    function closeList() {\n        if (clearFilterTextOnBlur) {\n            filterText = '';\n        }\n        listOpen = false;\n    }\n\n    export let ariaValues = (values) => {\n        return `Option ${values}, selected.`;\n    };\n\n    export let ariaListOpen = (label, count) => {\n        return `You are currently focused on option ${label}. There are ${count} results available.`;\n    };\n\n    export let ariaFocused = () => {\n        return `Select is focused, type to refine list, press down to open the menu.`;\n    };\n\n    function handleAriaSelection(_multiple) {\n        let selected = undefined;\n\n        if (_multiple && value.length > 0) {\n            selected = value.map((v) => v[label]).join(', ');\n        } else {\n            selected = value[label];\n        }\n\n        return ariaValues(selected);\n    }\n\n    function handleAriaContent() {\n        if (!filteredItems || filteredItems.length === 0) return '';\n        let _item = filteredItems[hoverItemIndex];\n        if (listOpen && _item) {\n            let count = filteredItems ? filteredItems.length : 0;\n            return ariaListOpen(_item[label], count);\n        } else {\n            return ariaFocused();\n        }\n    }\n\n    let list = null;\n\n    let isScrollingTimer;\n    function handleListScroll() {\n        clearTimeout(isScrollingTimer);\n        isScrollingTimer = setTimeout(() => {\n            isScrolling = false;\n        }, 100);\n    }\n\n    function handleClickOutside(event) {\n        if (!listOpen && !focused && container && !container.contains(event.target) && !list?.contains(event.target)) {\n            handleBlur();\n        }\n    }\n\n    onDestroy(() => {\n        list?.remove();\n    });\n\n    let isScrolling = false;\n\n    function handleSelect(item) {\n        if (!item || item.selectable === false) return;\n        itemSelected(item);\n    }\n\n    function handleHover(i) {\n        if (isScrolling) return;\n        hoverItemIndex = i;\n    }\n\n    function handleItemClick(args) {\n        const { item, i } = args;\n        if (item?.selectable === false) return;\n        if (value && !multiple && value[itemId] === item[itemId]) return closeList();\n        if (isItemSelectable(item)) {\n            hoverItemIndex = i;\n            handleSelect(item);\n        }\n    }\n\n    function setHoverIndex(increment) {\n        let selectableFilteredItems = filteredItems.filter(\n            (item) => !Object.hasOwn(item, 'selectable') || item.selectable === true\n        );\n\n        if (selectableFilteredItems.length === 0) {\n            return (hoverItemIndex = 0);\n        }\n\n        if (increment > 0 && hoverItemIndex === filteredItems.length - 1) {\n            hoverItemIndex = 0;\n        } else if (increment < 0 && hoverItemIndex === 0) {\n            hoverItemIndex = filteredItems.length - 1;\n        } else {\n            hoverItemIndex = hoverItemIndex + increment;\n        }\n\n        const hover = filteredItems[hoverItemIndex];\n\n        if (hover && hover.selectable === false) {\n            if (increment === 1 || increment === -1) setHoverIndex(increment);\n            return;\n        }\n    }\n\n    function isItemActive(item, value, itemId) {\n        if (multiple) return;\n        return value && value[itemId] === item[itemId];\n    }\n\n    function isItemFirst(itemIndex) {\n        return itemIndex === 0;\n    }\n\n    function isItemSelectable(item) {\n        return (item.groupHeader && item.selectable) || item.selectable || !item.hasOwnProperty('selectable');\n    }\n\n    const activeScroll = scrollAction;\n    const hoverScroll = scrollAction;\n\n    function scrollAction(node) {\n        return {\n            update(args) {\n                if (args.scroll) {\n                    handleListScroll();\n                    node.scrollIntoView({ behavior: 'auto', block: 'nearest' });\n                }\n            },\n        };\n    }\n\n    function setListWidth() {\n        const { width } = container.getBoundingClientRect();\n        list.style.width = listAutoWidth ? width + 'px' : 'auto';\n    }\n\n    let _floatingConfig = {\n        strategy: 'absolute',\n        placement: 'bottom-start',\n        middleware: [offset(listOffset), flip(), shift()],\n        autoUpdate: false,\n    };\n\n    const [floatingRef, floatingContent, floatingUpdate] = createFloatingActions(_floatingConfig);\n\n    $: if (container && floatingConfig?.autoUpdate === undefined) {\n        _floatingConfig.autoUpdate = true;\n    }\n\n    let prefloat = true;\n    function listMounted(list, listOpen) {\n        if (!list || !listOpen) return (prefloat = true);\n        setTimeout(() => {\n            prefloat = false;\n        }, 0);\n    }\n</script>\n\n<svelte:window on:click={handleClickOutside} on:keydown={handleKeyDown} />\n\n<div\n    class=\"svelte-select {containerClasses}\"\n    class:multi={multiple}\n    class:disabled\n    class:focused\n    class:list-open={listOpen}\n    class:show-chevron={showChevron}\n    class:error={hasError}\n    style={containerStyles}\n    on:pointerup|preventDefault={handleClick}\n    bind:this={container}\n    use:floatingRef\n    role=\"none\">\n    {#if listOpen}\n        <div\n            use:floatingContent\n            bind:this={list}\n            class=\"svelte-select-list\"\n            class:prefloat\n            on:scroll={handleListScroll}\n            on:pointerup|preventDefault|stopPropagation\n            on:mousedown|preventDefault|stopPropagation\n\t\t\trole=\"none\">\n            {#if $$slots['list-prepend']}<slot name=\"list-prepend\" />{/if}\n            {#if $$slots.list}<slot name=\"list\" {filteredItems} />\n            {:else if filteredItems.length > 0}\n                {#each filteredItems as item, i}\n                    <div\n                        on:mouseover={() => handleHover(i)}\n                        on:focus={() => handleHover(i)}\n                        on:click|stopPropagation={() => handleItemClick({ item, i })}\n                        on:keydown|preventDefault|stopPropagation\n                        class=\"list-item\"\n                        tabindex=\"-1\"\n                        role=\"none\">\n                        <div\n                            use:activeScroll={{ scroll: isItemActive(item, value, itemId), listDom }}\n                            use:hoverScroll={{ scroll: scrollToHoverItem === i, listDom }}\n                            class=\"item\"\n                            class:list-group-title={item.groupHeader}\n                            class:active={isItemActive(item, value, itemId)}\n                            class:first={isItemFirst(i)}\n                            class:hover={hoverItemIndex === i}\n                            class:group-item={item.groupItem}\n                            class:not-selectable={item?.selectable === false}>\n                            <slot name=\"item\" {item} index={i}>\n                                {item?.[label]}\n                            </slot>\n                        </div>\n                    </div>\n                {/each}\n            {:else if !hideEmptyState}\n                <slot name=\"empty\">\n                    <div class=\"empty\">No options</div>\n                </slot>\n            {/if}\n            {#if $$slots['list-append']}<slot name=\"list-append\" />{/if}\n        </div>\n    {/if}\n\n    <span aria-live=\"polite\" aria-atomic=\"false\" aria-relevant=\"additions text\" class=\"a11y-text\">\n        {#if focused}\n            <span id=\"aria-selection\">{ariaSelection}</span>\n            <span id=\"aria-context\">\n                {ariaContext}\n            </span>\n        {/if}\n    </span>\n\n    <div class=\"prepend\">\n        <slot name=\"prepend\" />\n    </div>\n\n    <div class=\"value-container\">\n        {#if hasValue}\n            {#if multiple}\n                {#each value as item, i}\n                    <div\n                        class=\"multi-item\"\n                        class:active={activeValue === i}\n                        class:disabled\n                        on:click|preventDefault={() => (multiFullItemClearable ? handleMultiItemClear(i) : {})}\n                        on:keydown|preventDefault|stopPropagation\n                        role=\"none\">\n                        <span class=\"multi-item-text\">\n                            <slot name=\"selection\" selection={item} index={i}>\n                                {item[label]}\n                            </slot>\n                        </span>\n\n                        {#if !disabled && !multiFullItemClearable && ClearIcon}\n                            <div\n                                class=\"multi-item-clear\"\n                                on:pointerup|preventDefault|stopPropagation={() => handleMultiItemClear(i)}>\n                                <slot name=\"multi-clear-icon\">\n                                    <ClearIcon />\n                                </slot>\n                            </div>\n                        {/if}\n                    </div>\n                {/each}\n            {:else}\n                <div class=\"selected-item\" class:hide-selected-item={hideSelectedItem}>\n                    <slot name=\"selection\" selection={value}>\n                        {value[label]}\n                    </slot>\n                </div>\n            {/if}\n        {/if}\n\n        <input\n            on:keydown={handleKeyDown}\n            on:blur={handleBlur}\n            on:focus={handleFocus}\n            readOnly={!searchable}\n            {..._inputAttributes}\n            bind:this={input}\n            bind:value={filterText}\n            placeholder={placeholderText}\n            style={inputStyles}\n            {disabled} />\n    </div>\n\n    <div class=\"indicators\">\n        {#if loading}\n            <div class=\"icon loading\" aria-hidden=\"true\">\n                <slot name=\"loading-icon\">\n                    <LoadingIcon />\n                </slot>\n            </div>\n        {/if}\n\n        {#if showClear}\n            <button type=\"button\" class=\"icon clear-select\" on:click={handleClear}>\n                <slot name=\"clear-icon\">\n                    <ClearIcon />\n                </slot>\n            </button>\n        {/if}\n\n        {#if showChevron}\n            <div class=\"icon chevron\" aria-hidden=\"true\">\n                <slot name=\"chevron-icon\" {listOpen}>\n                    <ChevronIcon />\n                </slot>\n            </div>\n        {/if}\n    </div>\n\n    <slot name=\"input-hidden\" {value}>\n        <input {name} type=\"hidden\" value={value ? JSON.stringify(value) : null} />\n    </slot>\n\n    {#if required && (!value || value.length === 0)}\n        <slot name=\"required\" {value}>\n            <select class=\"required\" required tabindex=\"-1\" aria-hidden=\"true\" />\n        </slot>\n    {/if}\n</div>\n\n<style>\n    .svelte-select {\n        /* deprecating camelCase custom props in favour of kebab-case for v5 */\n        --borderRadius: var(--border-radius);\n        --clearSelectColor: var(--clear-select-color);\n        --clearSelectWidth: var(--clear-select-width);\n        --disabledBackground: var(--disabled-background);\n        --disabledBorderColor: var(--disabled-border-color);\n        --disabledColor: var(--disabled-color);\n        --disabledPlaceholderColor: var(--disabled-placeholder-color);\n        --disabledPlaceholderOpacity: var(--disabled-placeholder-opacity);\n        --errorBackground: var(--error-background);\n        --errorBorder: var(--error-border);\n        --groupItemPaddingLeft: var(--group-item-padding-left);\n        --groupTitleColor: var(--group-title-color);\n        --groupTitleFontSize: var(--group-title-font-size);\n        --groupTitleFontWeight: var(--group-title-font-weight);\n        --groupTitlePadding: var(--group-title-padding);\n        --groupTitleTextTransform: var(--group-title-text-transform);\n        --groupTitleBorderColor: var(--group-title-border-color);\n        --groupTitleBorderWidth: var(--group-title-border-width);\n        --groupTitleBorderStyle: var(--group-title-border-style);\n        --indicatorColor: var(--chevron-color);\n        --indicatorHeight: var(--chevron-height);\n        --indicatorWidth: var(--chevron-width);\n        --inputColor: var(--input-color);\n        --inputLeft: var(--input-left);\n        --inputLetterSpacing: var(--input-letter-spacing);\n        --inputMargin: var(--input-margin);\n        --inputPadding: var(--input-padding);\n        --itemActiveBackground: var(--item-active-background);\n        --itemColor: var(--item-color);\n        --itemFirstBorderRadius: var(--item-first-border-radius);\n        --itemHoverBG: var(--item-hover-bg);\n        --itemHoverColor: var(--item-hover-color);\n        --itemIsActiveBG: var(--item-is-active-bg);\n        --itemIsActiveColor: var(--item-is-active-color);\n        --itemIsNotSelectableColor: var(--item-is-not-selectable-color);\n        --itemPadding: var(--item-padding);\n        --listBackground: var(--list-background);\n        --listBorder: var(--list-border);\n        --listBorderRadius: var(--list-border-radius);\n        --listEmptyColor: var(--list-empty-color);\n        --listEmptyPadding: var(--list-empty-padding);\n        --listEmptyTextAlign: var(--list-empty-text-align);\n        --listMaxHeight: var(--list-max-height);\n        --listPosition: var(--list-position);\n        --listShadow: var(--list-shadow);\n        --listZIndex: var(--list-z-index);\n        --multiItemBG: var(--multi-item-bg);\n        --multiItemBorderRadius: var(--multi-item-border-radius);\n        --multiItemDisabledHoverBg: var(--multi-item-disabled-hover-bg);\n        --multiItemDisabledHoverColor: var(--multi-item-disabled-hover-color);\n        --multiItemHeight: var(--multi-item-height);\n        --multiItemMargin: var(--multi-item-margin);\n        --multiItemPadding: var(--multi-item-padding);\n        --multiSelectInputMargin: var(--multi-select-input-margin);\n        --multiSelectInputPadding: var(--multi-select-input-padding);\n        --multiSelectPadding: var(--multi-select-padding);\n        --placeholderColor: var(--placeholder-color);\n        --placeholderOpacity: var(--placeholder-opacity);\n        --selectedItemPadding: var(--selected-item-padding);\n        --spinnerColor: var(--spinner-color);\n        --spinnerHeight: var(--spinner-height);\n        --spinnerWidth: var(--spinner-width);\n\n        --internal-padding: 0 0 0 16px;\n\n        border: var(--border, 1px solid #d8dbdf);\n        border-radius: var(--border-radius, 6px);\n        min-height: var(--height, 42px);\n        position: relative;\n        display: flex;\n        align-items: stretch;\n        padding: var(--padding, var(--internal-padding));\n        background: var(--background, #fff);\n        margin: var(--margin, 0);\n        width: var(--width, 100%);\n        font-size: var(--font-size, 16px);\n        max-height: var(--max-height);\n    }\n\n    * {\n        box-sizing: var(--box-sizing, border-box);\n    }\n\n    .svelte-select:hover {\n        border: var(--border-hover, 1px solid #b2b8bf);\n    }\n\n    .value-container {\n        display: flex;\n        flex: 1 1 0%;\n        flex-wrap: wrap;\n        align-items: center;\n        gap: 5px 10px;\n        padding: var(--value-container-padding, 5px 0);\n        position: relative;\n        overflow: var(--value-container-overflow, hidden);\n        align-self: stretch;\n    }\n\n    .prepend,\n    .indicators {\n        display: flex;\n        flex-shrink: 0;\n        align-items: center;\n    }\n\n    .indicators {\n        position: var(--indicators-position);\n        top: var(--indicators-top);\n        right: var(--indicators-right);\n        bottom: var(--indicators-bottom);\n    }\n\n    input {\n        position: absolute;\n        cursor: default;\n        border: none;\n        color: var(--input-color, var(--item-color));\n        padding: var(--input-padding, 0);\n        letter-spacing: var(--input-letter-spacing, inherit);\n        margin: var(--input-margin, 0);\n        min-width: 10px;\n        top: 0;\n        right: 0;\n        bottom: 0;\n        left: 0;\n        background: transparent;\n        font-size: var(--font-size, 16px);\n    }\n\n    :not(.multi) > .value-container > input {\n        width: 100%;\n        height: 100%;\n    }\n\n    input::placeholder {\n        color: var(--placeholder-color, #78848f);\n        opacity: var(--placeholder-opacity, 1);\n    }\n\n    input:focus {\n        outline: none;\n    }\n\n    .svelte-select.focused {\n        border: var(--border-focused, 1px solid #006fe8);\n        border-radius: var(--border-radius-focused, var(--border-radius, 6px));\n    }\n\n    .disabled {\n        background: var(--disabled-background, #ebedef);\n        border-color: var(--disabled-border-color, #ebedef);\n        color: var(--disabled-color, #c1c6cc);\n    }\n\n    .disabled input::placeholder {\n        color: var(--disabled-placeholder-color, #c1c6cc);\n        opacity: var(--disabled-placeholder-opacity, 1);\n    }\n\n    .selected-item {\n        position: relative;\n        overflow: var(--selected-item-overflow, hidden);\n        padding: var(--selected-item-padding, 0 20px 0 0);\n        text-overflow: ellipsis;\n        white-space: nowrap;\n        color: var(--selected-item-color, inherit);\n        font-size: var(--font-size, 16px);\n    }\n\n    .multi .selected-item {\n        position: absolute;\n        line-height: var(--height, 42px);\n        height: var(--height, 42px);\n    }\n\n    .selected-item:focus {\n        outline: none;\n    }\n\n    .hide-selected-item {\n        opacity: 0;\n    }\n\n    .icon {\n        display: flex;\n        align-items: center;\n        justify-content: center;\n    }\n\n    .clear-select {\n        all: unset;\n        display: flex;\n        align-items: center;\n        justify-content: center;\n        width: var(--clear-select-width, 40px);\n        height: var(--clear-select-height, 100%);\n        color: var(--clear-select-color, var(--icons-color));\n        margin: var(--clear-select-margin, 0);\n        pointer-events: all;\n        flex-shrink: 0;\n    }\n\n    .clear-select:focus {\n        outline: var(--clear-select-focus-outline, 1px solid #006fe8);\n    }\n\n    .loading {\n        width: var(--loading-width, 40px);\n        height: var(--loading-height);\n        color: var(--loading-color, var(--icons-color));\n        margin: var(--loading--margin, 0);\n        flex-shrink: 0;\n    }\n\n    .chevron {\n        width: var(--chevron-width, 40px);\n        height: var(--chevron-height, 40px);\n        background: var(--chevron-background, transparent);\n        pointer-events: var(--chevron-pointer-events, none);\n        color: var(--chevron-color, var(--icons-color));\n        border: var(--chevron-border, 0 0 0 1px solid #d8dbdf);\n        flex-shrink: 0;\n    }\n\n    .multi {\n        padding: var(--multi-select-padding, var(--internal-padding));\n    }\n\n    .multi input {\n        padding: var(--multi-select-input-padding, 0);\n        position: relative;\n        margin: var(--multi-select-input-margin, 5px 0);\n        flex: 1 1 40px;\n    }\n\n    .svelte-select.error {\n        border: var(--error-border, 1px solid #ff2d55);\n        background: var(--error-background, #fff);\n    }\n\n    .a11y-text {\n        z-index: 9999;\n        border: 0px;\n        clip: rect(1px, 1px, 1px, 1px);\n        height: 1px;\n        width: 1px;\n        position: absolute;\n        overflow: hidden;\n        padding: 0px;\n        white-space: nowrap;\n    }\n\n    .multi-item {\n        background: var(--multi-item-bg, #ebedef);\n        margin: var(--multi-item-margin, 0);\n        outline: var(--multi-item-outline, 1px solid #ddd);\n        border-radius: var(--multi-item-border-radius, 4px);\n        height: var(--multi-item-height, 25px);\n        line-height: var(--multi-item-height, 25px);\n        display: flex;\n        cursor: default;\n        padding: var(--multi-item-padding, 0 5px);\n        overflow: hidden;\n        gap: var(--multi-item-gap, 4px);\n        outline-offset: -1px;\n        max-width: var(--multi-max-width, none);\n        color: var(--multi-item-color, var(--item-color));\n    }\n\n    .multi-item.disabled:hover {\n        background: var(--multi-item-disabled-hover-bg, #ebedef);\n        color: var(--multi-item-disabled-hover-color, #c1c6cc);\n    }\n\n    .multi-item-text {\n        overflow: hidden;\n        text-overflow: ellipsis;\n        white-space: nowrap;\n    }\n\n    .multi-item-clear {\n        display: flex;\n        align-items: center;\n        justify-content: center;\n        --clear-icon-color: var(--multi-item-clear-icon-color, #000);\n    }\n\n    .multi-item.active {\n        outline: var(--multi-item-active-outline, 1px solid #006fe8);\n    }\n\n    .svelte-select-list {\n        box-shadow: var(--list-shadow, 0 2px 3px 0 rgba(44, 62, 80, 0.24));\n        border-radius: var(--list-border-radius, 4px);\n        max-height: var(--list-max-height, 252px);\n        overflow-y: auto;\n        background: var(--list-background, #fff);\n        position: var(--list-position, absolute);\n        z-index: var(--list-z-index, 2);\n        border: var(--list-border);\n    }\n\n    .prefloat {\n        opacity: 0;\n        pointer-events: none;\n    }\n\n    .list-group-title {\n        color: var(--group-title-color, #8f8f8f);\n        cursor: default;\n        font-size: var(--group-title-font-size, 16px);\n        font-weight: var(--group-title-font-weight, 600);\n        height: var(--height, 42px);\n        line-height: var(--height, 42px);\n        padding: var(--group-title-padding, 0 20px);\n        text-overflow: ellipsis;\n        overflow-x: hidden;\n        white-space: nowrap;\n        text-transform: var(--group-title-text-transform, uppercase);\n        border-width: var(--group-title-border-width, medium);\n        border-style: var(--group-title-border-style, none);\n        border-color: var(--group-title-border-color, color);\n    }\n\n    .empty {\n        text-align: var(--list-empty-text-align, center);\n        padding: var(--list-empty-padding, 20px 0);\n        color: var(--list-empty-color, #78848f);\n    }\n\n    .item {\n        cursor: default;\n        height: var(--item-height, var(--height, 42px));\n        line-height: var(--item-line-height, var(--height, 42px));\n        padding: var(--item-padding, 0 20px);\n        color: var(--item-color, inherit);\n        text-overflow: ellipsis;\n        overflow: hidden;\n        white-space: nowrap;\n        transition: var(--item-transition, all 0.2s);\n        align-items: center;\n        width: 100%;\n    }\n\n    .item.group-item {\n        padding-left: var(--group-item-padding-left, 40px);\n    }\n\n    .item:active {\n        background: var(--item-active-background, #b9daff);\n    }\n\n    .item.active {\n        background: var(--item-is-active-bg, #007aff);\n        color: var(--item-is-active-color, #fff);\n    }\n\n    .item.first {\n        border-radius: var(--item-first-border-radius, 4px 4px 0 0);\n    }\n\n    .item.hover:not(.active) {\n        background: var(--item-hover-bg, #e7f2ff);\n        color: var(--item-hover-color, inherit);\n    }\n\n    .item.not-selectable,\n    .item.hover.item.not-selectable,\n    .item.active.item.not-selectable,\n    .item.not-selectable:active {\n        color: var(--item-is-not-selectable-color, #999);\n        background: transparent;\n    }\n\n    .required {\n        opacity: 0;\n        z-index: -1;\n        position: absolute;\n        top: 0;\n        left: 0;\n        bottom: 0;\n        right: 0;\n    }\n</style>\n",
    "<script>\n\timport * as d3 from \"d3\";\n\timport { onMount, onDestroy } from \"svelte\";\n\timport { getGEO, getCSV, keysToCount } from \"./utils.js\";\n\timport { centralPointsStore } from \"./store\";\n\timport Header from \"./layout/Header.svelte\";\n\timport Scroller from \"./layout/Scroller.svelte\";\n\timport Stages from \"./vis/Stages.svelte\";\n\timport Rectangles from \"./vis/Rectangles.svelte\";\n\timport Timeline from \"./vis/Timeline.svelte\";\n\timport Area from \"./vis/Area.svelte\";\n\timport Geography from \"./vis/Geography.svelte\";\n\timport Dendrogram from \"./vis/Dendrogram.svelte\";\n\n\t// Scroll references\n\tlet scrollerRefAgreement,\n\t\tscrollerRefRectangles,\n\t\tscrollerRefReason,\n\t\tscrollerRefTime,\n\t\tscrollerRefStages,\n\t\tscrollerRefGeo,\n\t\tscrollerRefDend,\n\t\tscrollerRefResearch;\n\n\tlet scrollerTopAgmt,\n\t\tscrollerTopGeo,\n\t\tscrollerTopRect,\n\t\tscrollerTopReason,\n\t\tscrollerTopStage,\n\t\tscrollerTopTime,\n\t\tscrollerTopDend,\n\t\tscrollerTopRes;\n\n\t//handlers\n\tlet resizeHandler;\n\tlet onScroll;\n\n\t// CONFIG FOR SCROLLER COMPONENTS\n\tconst threshold = 0.65;\n\tlet id = {}; // Object to hold visible section IDs of Scroller components\n\tlet idPrev = {}; // Object to keep track of previous IDs, to compare for changes\n\n\t// Custom smooth scroll function with slower speed\n\tfunction smoothScrollTo(targetPosition) {\n\t\tconst start = window.scrollY;\n\t\tconst distance = targetPosition - start;\n\t\tconst direction = distance > 0 ? 1 : -1;\n\t\tconst totalDistance = Math.abs(distance);\n\t\tlet startTime = null;\n\n\t\tfunction step(currentTime) {\n\t\t\tif (!startTime) startTime = currentTime;\n\t\t\tconst elapsed = currentTime - startTime;\n\t\t\tconst traveled = Math.min(elapsed * 5, totalDistance);\n\t\t\twindow.scrollTo(0, start + traveled * direction);\n\n\t\t\tif (traveled < totalDistance) {\n\t\t\t\trequestAnimationFrame(step);\n\t\t\t}\n\t\t}\n\t\trequestAnimationFrame(step);\n\t}\n\n\tlet active = {\n\t\tagreement: false,\n\t\tgeo: false,\n\t\trect: false,\n\t\treason: false,\n\t};\n\n\t// in/out of viewpoint functions\n\tfunction handleEnter(section) {\n\t\td3.select(\".rotated\").transition().style(\"opacity\", 0);\n\t\td3.selectAll(\n\t\t\t\".scroll-line-agmt img, .scroll-line-geo img, .scroll-line-rect img, .scroll-line-reason img, .scroll-line-stage img, .scroll-line-time img, .scroll-line-dendr img\",\n\t\t).style(\"opacity\", 0.5);\n\t\t// Set opacity to 1 for the corresponding icon\n\t\td3.select(`.scroll-line-${section} img`).style(\"opacity\", 1);\n\t}\n\n\tfunction handleLeave(section) {\n\t\t// Set opacity to 0.5 for the corresponding icon\n\t\td3.select(`.scroll-line-${section} img`).style(\"opacity\", 0.5);\n\t\tif (section == \"geo\") {\n\t\t\td3.select(`.scroll-line-agmt img`).style(\"opacity\", 1);\n\t\t} else if (section == \"rect\") {\n\t\t\td3.select(`.scroll-line-geo img`).style(\"opacity\", 1);\n\t\t} else if (section == \"reason\") {\n\t\t\td3.select(`.scroll-line-rect img`).style(\"opacity\", 1);\n\t\t} else if (section == \"stage\") {\n\t\t\td3.select(`.scroll-line-reason img`).style(\"opacity\", 1);\n\t\t} else if (section == \"time\") {\n\t\t\td3.select(`.scroll-line-stage img`).style(\"opacity\", 1);\n\t\t} else if (section == \"dendr\") {\n\t\t\td3.select(`.scroll-line-time img`).style(\"opacity\", 1);\n\t\t} else if (section == \"research\") {\n\t\t\td3.select(`.scroll-line-dendr img`).style(\"opacity\", 1);\n\t\t} else {\n\t\t\td3.select(\".rotated\").transition().style(\"opacity\", 1);\n\t\t}\n\t}\n\n\t// INIT functions\n\tonMount(() => {\n\t\t// scroll to top on loading the page\n\t\tif (\"scrollRestoration\" in history) {\n\t\t\thistory.scrollRestoration = \"manual\";\n\t\t}\n\t\twindow.scrollTo({ top: 0, behavior: \"auto\" });\n\t\tidPrev = { ...id };\n\n\t\t// indicator\n\t\tconst indicator = document.querySelector(\"#indicator\");\n\t\tconst lineAgmt = document.querySelector(\".scroll-line-agmt\");\n\t\tconst lineGeo = document.querySelector(\".scroll-line-geo\");\n\t\tconst lineRect = document.querySelector(\".scroll-line-rect\");\n\t\tconst lineReason = document.querySelector(\".scroll-line-reason\");\n\t\tconst lineTime = document.querySelector(\".scroll-line-time\");\n\t\tconst lineStage = document.querySelector(\".scroll-line-stage\");\n\t\tconst lineDend = document.querySelector(\".scroll-line-dendr\");\n\t\tconst lineResearch = document.querySelector(\".scroll-line-research\");\n\n\t\tif (!indicator) return;\n\n\t\tconst setFixedLinePosition = () => {\n\t\t\tlet docHeight =\n\t\t\t\tdocument.documentElement.scrollHeight - window.innerHeight;\n\n\t\t\tif (docHeight <= 0) {\n\t\t\t\trequestAnimationFrame(setFixedLinePosition);\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\t// Position agt\n\t\t\tif (scrollerRefAgreement instanceof HTMLElement) {\n\t\t\t\tlet scrollerAgmt = scrollerRefAgreement.getBoundingClientRect();\n\t\t\t\tscrollerTopAgmt = scrollerAgmt.top + window.scrollY;\n\n\t\t\t\t// Add click listener to lineRect\n\t\t\t\tlineAgmt.addEventListener(\"click\", () => {\n\t\t\t\t\tsmoothScrollTo(scrollerTopAgmt);\n\t\t\t\t});\n\t\t\t}\n\n\t\t\t// Position map\n\t\t\tif (scrollerRefGeo instanceof HTMLElement) {\n\t\t\t\tconst scrollerRectGeo = scrollerRefGeo.getBoundingClientRect();\n\t\t\t\tscrollerTopGeo = scrollerRectGeo.top + window.scrollY;\n\t\t\t\tlineGeo.addEventListener(\"click\", () => {\n\t\t\t\t\tsmoothScrollTo(scrollerTopGeo);\n\t\t\t\t});\n\t\t\t}\n\n\t\t\t// Position rects\n\t\t\tif (scrollerRefRectangles instanceof HTMLElement) {\n\t\t\t\tlet scrollerRect =\n\t\t\t\t\tscrollerRefRectangles.getBoundingClientRect();\n\t\t\t\tscrollerTopRect = scrollerRect.top + window.scrollY;\n\t\t\t\tlineRect.addEventListener(\"click\", () => {\n\t\t\t\t\tsmoothScrollTo(scrollerTopRect);\n\t\t\t\t});\n\t\t\t}\n\n\t\t\t// Position lineReason\n\t\t\tif (scrollerRefReason instanceof HTMLElement) {\n\t\t\t\tlet scrollerReason = scrollerRefReason.getBoundingClientRect();\n\t\t\t\tscrollerTopReason = scrollerReason.top + window.scrollY;\n\t\t\t\tlineReason.addEventListener(\"click\", () => {\n\t\t\t\t\tsmoothScrollTo(scrollerTopReason);\n\t\t\t\t});\n\t\t\t}\n\n\t\t\t// Position lineStage\n\t\t\tif (scrollerRefStages instanceof HTMLElement) {\n\t\t\t\tconst scrollerRectStage =\n\t\t\t\t\tscrollerRefStages.getBoundingClientRect();\n\t\t\t\tscrollerTopStage = scrollerRectStage.top + window.scrollY;\n\t\t\t\tlineStage.addEventListener(\"click\", () => {\n\t\t\t\t\tsmoothScrollTo(scrollerTopStage);\n\t\t\t\t});\n\t\t\t}\n\n\t\t\t// Position lineTime\n\t\t\tif (scrollerRefTime instanceof HTMLElement) {\n\t\t\t\tconst scrollerRectTime =\n\t\t\t\t\tscrollerRefTime.getBoundingClientRect();\n\t\t\t\tscrollerTopTime = scrollerRectTime.top + window.scrollY;\n\t\t\t\tlineTime.addEventListener(\"click\", () => {\n\t\t\t\t\tsmoothScrollTo(scrollerTopTime);\n\t\t\t\t});\n\t\t\t}\n\n\t\t\tif (scrollerRefDend instanceof HTMLElement) {\n\t\t\t\tconst scrollerRectDend =\n\t\t\t\t\tscrollerRefDend.getBoundingClientRect();\n\t\t\t\tscrollerTopDend = scrollerRectDend.top + window.scrollY;\n\t\t\t\tlineDend.addEventListener(\"click\", () => {\n\t\t\t\t\tsmoothScrollTo(scrollerTopDend);\n\t\t\t\t});\n\t\t\t}\n\n\t\t\tif (scrollerRefResearch instanceof HTMLElement) {\n\t\t\t\tconst scrollerRectRes =\n\t\t\t\t\tscrollerRefResearch.getBoundingClientRect();\n\t\t\t\tscrollerTopRes = scrollerRectRes.top + window.scrollY;\n\t\t\t\tlineResearch.addEventListener(\"click\", () => {\n\t\t\t\t\tsmoothScrollTo(scrollerTopRes);\n\t\t\t\t});\n\t\t\t}\n\t\t};\n\n\t\t// scroll handler\n\t\tonScroll = () => {\n\t\t\tconst scrollPos = window.scrollY + window.innerHeight * 0.5; // trigger roughly at middle\n\n\t\t\t// Agreement\n\t\t\tif (scrollerTopAgmt) {\n\t\t\t\tif (!active.agreement && scrollPos >= scrollerTopAgmt) {\n\t\t\t\t\tactive.agreement = true;\n\t\t\t\t\thandleEnter(\"agmt\");\n\t\t\t\t} else if (active.agreement && scrollPos < scrollerTopAgmt) {\n\t\t\t\t\tactive.agreement = false;\n\t\t\t\t\thandleLeave(\"agmt\");\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// Geo\n\t\t\tif (scrollerTopGeo) {\n\t\t\t\tif (!active.geo && scrollPos >= scrollerTopGeo) {\n\t\t\t\t\tactive.geo = true;\n\t\t\t\t\thandleEnter(\"geo\");\n\t\t\t\t} else if (active.geo && scrollPos < scrollerTopGeo) {\n\t\t\t\t\tactive.geo = false;\n\t\t\t\t\thandleLeave(\"geo\");\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// Rect\n\t\t\tif (scrollerTopRect) {\n\t\t\t\tif (!active.rect && scrollPos >= scrollerTopRect) {\n\t\t\t\t\tactive.rect = true;\n\t\t\t\t\thandleEnter(\"rect\");\n\t\t\t\t} else if (active.rect && scrollPos < scrollerTopRect) {\n\t\t\t\t\tactive.rect = false;\n\t\t\t\t\thandleLeave(\"rect\");\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// Reason\n\t\t\tif (scrollerTopReason) {\n\t\t\t\tif (!active.reason && scrollPos >= scrollerTopReason) {\n\t\t\t\t\tactive.reason = true;\n\t\t\t\t\thandleEnter(\"reason\");\n\t\t\t\t} else if (active.reason && scrollPos < scrollerTopReason) {\n\t\t\t\t\tactive.reason = false;\n\t\t\t\t\thandleLeave(\"reason\");\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// stages\n\t\t\tif (scrollerTopStage) {\n\t\t\t\tif (!active.stage && scrollPos >= scrollerTopStage) {\n\t\t\t\t\tactive.stage = true;\n\t\t\t\t\thandleEnter(\"stage\");\n\t\t\t\t} else if (active.stage && scrollPos < scrollerTopStage) {\n\t\t\t\t\tactive.stage = false;\n\t\t\t\t\thandleLeave(\"stage\");\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// time\n\t\t\tif (scrollerTopTime) {\n\t\t\t\tif (!active.time && scrollPos >= scrollerTopTime) {\n\t\t\t\t\tactive.time = true;\n\t\t\t\t\thandleEnter(\"time\");\n\t\t\t\t} else if (active.time && scrollPos < scrollerTopTime) {\n\t\t\t\t\tactive.time = false;\n\t\t\t\t\thandleLeave(\"time\");\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// dend\n\t\t\tif (scrollerTopDend) {\n\t\t\t\tif (!active.dendr && scrollPos >= scrollerTopDend) {\n\t\t\t\t\tactive.dendr = true;\n\t\t\t\t\thandleEnter(\"dendr\");\n\t\t\t\t} else if (active.dendr && scrollPos < scrollerTopDend) {\n\t\t\t\t\tactive.dendr = false;\n\t\t\t\t\thandleLeave(\"dendr\");\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// research\n\t\t\tif (scrollerTopRes) {\n\t\t\t\tif (!active.research && scrollPos >= scrollerTopRes) {\n\t\t\t\t\tactive.research = true;\n\t\t\t\t\thandleEnter(\"research\");\n\t\t\t\t} else if (active.research && scrollPos < scrollerTopRes) {\n\t\t\t\t\tactive.research = false;\n\t\t\t\t\thandleLeave(\"research\");\n\t\t\t\t}\n\t\t\t}\n\t\t};\n\n\t\twindow.addEventListener(\"scroll\", onScroll);\n\t\tonScroll(); // initial check\n\n\t\t// Set the fixed line position once\n\t\trequestAnimationFrame(setFixedLinePosition);\n\n\t\t// global resize handler\n\t\tresizeHandler = () => requestAnimationFrame(setFixedLinePosition);\n\t\twindow.addEventListener(\"resize\", resizeHandler);\n\t});\n\n\t// cleanup on destroy\n\tonDestroy(() => {\n\t\twindow.removeEventListener(\"resize\", resizeHandler);\n\t});\n\n\tonDestroy(() => {\n\t\twindow.removeEventListener(\"scroll\", onScroll);\n\t});\n\n\t// STEPS\n\tlet step = null;\n\tconst actions = {\n\t\trect: {\n\t\t\trect01: () => {\n\t\t\t\tstep = \"rect01\";\n\t\t\t},\n\t\t\trect02: () => {\n\t\t\t\tstep = \"rect02\";\n\t\t\t},\n\t\t},\n\t\tarea: {\n\t\t\tarea01: () => {\n\t\t\t\tstep = \"area01\";\n\t\t\t},\n\t\t\tarea02: () => {\n\t\t\t\tstep = \"area02\";\n\t\t\t},\n\t\t},\n\t\tchart: {\n\t\t\tchart01: () => {\n\t\t\t\tstep = \"one\";\n\t\t\t},\n\t\t\tchart02: () => {\n\t\t\t\tstep = \"two\";\n\t\t\t},\n\t\t\tchart03: () => {\n\t\t\t\tstep = \"three\";\n\t\t\t},\n\t\t\tchart04: () => {\n\t\t\t\tstep = \"four\";\n\t\t\t},\n\t\t\tchart05: () => {\n\t\t\t\tstep = \"five\";\n\t\t\t},\n\t\t},\n\t\ttime: {\n\t\t\ttime01: () => {\n\t\t\t\tstep = \"1\";\n\t\t\t},\n\t\t\ttime02: () => {\n\t\t\t\tstep = \"2\";\n\t\t\t},\n\t\t\ttime03: () => {\n\t\t\t\tstep = \"3\";\n\t\t\t},\n\t\t\ttime04: () => {\n\t\t\t\tstep = \"4\";\n\t\t\t},\n\t\t\ttime05: () => {\n\t\t\t\tstep = \"5\";\n\t\t\t},\n\t\t\ttime06: () => {\n\t\t\t\tstep = \"6\";\n\t\t\t},\n\t\t\ttime07: () => {\n\t\t\t\tstep = \"7\";\n\t\t\t},\n\t\t\ttime08: () => {\n\t\t\t\tstep = \"8\";\n\t\t\t},\n\t\t\ttime09: () => {\n\t\t\t\tstep = \"9\";\n\t\t\t},\n\t\t},\n\t\tstage: {\n\t\t\tstage01: () => {\n\t\t\t\tstep = \"stage01\";\n\t\t\t},\n\t\t\tstage02: () => {\n\t\t\t\tstep = \"stage02\";\n\t\t\t},\n\t\t\tstage03: () => {\n\t\t\t\tstep = \"stage03\";\n\t\t\t},\n\t\t\tstage04: () => {\n\t\t\t\tstep = \"stage04\";\n\t\t\t},\n\t\t},\n\t\tmap: {\n\t\t\tmap01: () => {\n\t\t\t\tstep = \"map_one\";\n\t\t\t},\n\t\t\tmap02: () => {\n\t\t\t\tstep = \"map_two\";\n\t\t\t},\n\t\t\tmap03: () => {\n\t\t\t\tstep = \"map_three\";\n\t\t\t},\n\t\t\tmap04: () => {\n\t\t\t\tstep = \"map_four\";\n\t\t\t},\n\t\t},\n\t\tafgh: {\n\t\t\tafgh01: () => {\n\t\t\t\tstep = \"afgh01\";\n\t\t\t},\n\t\t\tafgh02: () => {\n\t\t\t\tstep = \"afgh02\";\n\t\t\t},\n\t\t\tafgh03: () => {\n\t\t\t\tstep = \"afgh03\";\n\t\t\t},\n\t\t\tafgh04: () => {\n\t\t\t\tstep = \"afgh04\";\n\t\t\t},\n\t\t},\n\t};\n\n\t// Code to run Scroller actions when new caption IDs come into view\n\tfunction runActions(codes = []) {\n\t\tcodes.forEach((code) => {\n\t\t\tif (id[code] != idPrev[code]) {\n\t\t\t\tif (actions[code][id[code]]) {\n\t\t\t\t\tactions[code][id[code]]();\n\t\t\t\t}\n\t\t\t\tidPrev[code] = id[code];\n\t\t\t}\n\t\t});\n\t}\n\n\t// Run above code when 'id' object changes\n\t$: id && runActions(Object.keys(actions));\n\n\t//LOAD GEOJSON\n\tlet mygeojson;\n\tconst myjson_path = \"./data/custom.geo.json\";\n\tgetGEO(myjson_path).then((geo) => {\n\t\tmygeojson = geo;\n\t});\n\n\t//LOAD PAX\n\tlet path = [\n\t\t\"./data/pax_v9.csv\",\n\t\t\"./data/pax_gender_v9.csv\",\n\t\t\"./data/gender_categories.csv\",\n\t];\n\tlet pax;\n\tlet pax_gender;\n\tlet pax_timeline;\n\tlet central_points;\n\tlet pax_stages;\n\tlet categories;\n\tgetCSV(path).then((data) => {\n\t\tcentralPointsStore.set(central_points);\n\t\tpax = data[0];\n\t\tpax_gender = data[1];\n\t\tcategories = data[2];\n\n\t\tconst counter = {};\n\t\tkeysToCount.forEach((key) => {\n\t\t\tcounter[key] = 0;\n\t\t});\n\n\t\t// Iterate through each object in the pax array\n\t\tpax.forEach((paxItem) => {\n\t\t\t// Find the corresponding item in pax_gender with the same AgtId\n\t\t\tconst genderItem = pax_gender.find(\n\t\t\t\t(gender) => gender.AgtId === paxItem.AgtId,\n\t\t\t);\n\n\t\t\t// If a matching item is found, add the WggPar and WggImplSign values\n\t\t\tif (genderItem) {\n\t\t\t\tpaxItem.WggRehab = genderItem.WggRehab;\n\t\t\t\tpaxItem.WggImplRole = genderItem.WggImplRole;\n\t\t\t\tpaxItem.WggHR = genderItem.WggHR;\n\t\t\t} else {\n\t\t\t\t// Optionally handle cases where no matching item is found\n\t\t\t\tpaxItem.WggRehab = \"0\";\n\t\t\t\tpaxItem.WggImplRole = \"0\";\n\t\t\t\tpaxItem.WggHR = \"0\";\n\t\t\t}\n\t\t});\n\n\t\tpax.sort(function (x, y) {\n\t\t\treturn d3.ascending(x.Dat.substring(0, 4), y.Dat.substring(0, 4));\n\t\t});\n\n\t\t//group by agreement stages\n\t\tpax_stages = d3.groups(pax, (d) => d.Stage);\n\t\tlet order = [\"Pre\", \"Cea\", \"SubPar\", \"SubComp\", \"Imp\", \"Ren\", \"Oth\"];\n\t\tpax_stages.sort((a, b) => order.indexOf(a[0]) - order.indexOf(b[0]));\n\n\t\tpax_timeline = d3.groups(pax, (d) => d.Dat.substring(0, 4));\n\t});\n\n\tlet mapLoaded = false;\n\t//map loaded, show start button\n\tfunction handleMapLoaded() {\n\t\tmapLoaded = true;\n\t\tdocument.getElementById(\"loading_text\").style.visibility = \"hidden\";\n\t\tdocument.getElementById(\"loading_button\").style.visibility = \"visible\";\n\t}\n\n\t//clicking on screen or button after map is loaded\n\tfunction handleScreenClick(event) {\n\t\tif (mapLoaded) {\n\t\t\tdocument.getElementById(\"loading_screen\").style.visibility =\n\t\t\t\t\"hidden\";\n\t\t\tdocument.getElementById(\"loading_button\").style.visibility =\n\t\t\t\t\"hidden\";\n\t\t\tdocument.documentElement.style.overflow = \"visible\"; // For <html>\n\t\t\tdocument.body.style.overflow = \"visible\"; // For <body>\n\t\t}\n\t}\n\n\tlet info_checker = 0;\n\tfunction infoPressed() {\n\t\tif (info_checker % 2 == 0) {\n\t\t\td3.select(\".info_div\").style(\"top\", \"1px\");\n\t\t} else {\n\t\t\td3.select(\".info_div\").style(\"top\", \"-100%\");\n\t\t}\n\t\tinfo_checker += 1;\n\t}\n\n\t$: console.log(step);\n</script>\n\n<!-- navigation -->\n<div id=\"indicator\">\n\t<p class=\"rotated\" style=\"color: black;\">CHAPTERS</p>\n\t<div class=\"scroll-line-agmt\" data-tooltip=\"Peace Agreement\">\n\t\t<img src=\"./img/agt.svg\" alt=\"rect\" />\n\t</div>\n\t<div class=\"scroll-line-geo\" data-tooltip=\"Geography\">\n\t\t<img src=\"./img/glb.svg\" alt=\"rect\" />\n\t</div>\n\t<div class=\"scroll-line-rect\" data-tooltip=\"All Agreements\">\n\t\t<img src=\"./img/rects.svg\" alt=\"rect\" />\n\t</div>\n\t<div class=\"scroll-line-reason\" data-tooltip=\"UN Resolution\">\n\t\t<img src=\"./img/un.svg\" alt=\"rect\" />\n\t</div>\n\t<div class=\"scroll-line-stage\" data-tooltip=\"Negotiation Stages\">\n\t\t<img src=\"./img/bars.svg\" alt=\"rect\" />\n\t</div>\n\t<div class=\"scroll-line-time\" data-tooltip=\"Reference Quality\">\n\t\t<img src=\"./img/ref.svg\" alt=\"rect\" />\n\t</div>\n\t<div class=\"scroll-line-dendr\" data-tooltip=\"Topics\">\n\t\t<img src=\"./img/dendr.svg\" alt=\"rect\" />\n\t</div>\n\t<div class=\"scroll-line-research\" data-tooltip=\"Research\">\n\t\t<img src=\"./img/research.svg\" alt=\"rect\" />\n\t</div>\n</div>\n\n<!-- loading screen -->\n<div\n\trole=\"presentation\"\n\tid=\"loading_screen\"\n\tstyle=\"height: calc(var(--vh, 1vh) * 100);\"\n\ton:click={handleScreenClick}\n>\n\t<button id=\"loading_button\" on:click={handleScreenClick}\n\t\t>Visualization</button\n\t>\n\t<p id=\"loading_text\">loading...</p>\n</div>\n\n<Header center={true} short={false}>\n\t<button\n\t\tclass=\"info\"\n\t\ton:mouseenter={() => infoPressed()}\n\t\ton:mouseleave={() => infoPressed()}\n\t\t><i class=\"fa fa-info\" aria-hidden=\"true\"></i></button\n\t>\n\t<div class=\"info_div\">\n\t\tThis 'scrollytelling' tool allows users to scroll through key findings\n\t\tand insights from data in the PA-X Peace Agreements Database, with a\n\t\tspecific view on Gender inclusion in formal peace agreements in the\n\t\tcontext of the UN Security Resolution 1325. Cite the data shown in this\n\t\ttool using: <br /><br /><i\n\t\t\t>Bell, Christine, Sanja Badanjak, Juline Beaujouan, Tim Epple, Adam\n\t\t\tFarquhar, Robert Forster, Astrid Jamar, Sean Molloy, Kevin\n\t\t\tMcNicholl, Kathryn Nash, Jan Pospisil, Robert Wilson, and Laura Wise\n\t\t\t(2025). PA-X Gender Peace Agreements Database and Dataset, Version\n\t\t\t9.</i\n\t\t>\n\t\t<br />\n\t\t<br />\n\t\t<strong>Visualization</strong>: Tomas Vancisin<br /><strong\n\t\t\t>Data Preparation</strong\n\t\t>: Niamh Henry <br /> <strong>Text</strong>: Laura Wise\n\t</div>\n\n\t<img\n\t\tclass=\"peace_logo\"\n\t\tsrc=\"./img/pax.png\"\n\t\talt=\"peacerep logo\"\n\t\tstyle=\"width: 200px;\"\n\t/>\n\t<h1>Women, Girls, and Gender in Peace Agreements</h1>\n\t<div id=\"text_field\" style=\"padding-left: 20%; padding-right:20%\">\n\t\t<p>\n\t\t\tMarking the 25<sup>th</sup> Anniversary of the Women, Peace and Security\n\t\t\tagenda, this visualization uses the PA-X database to show how and to\n\t\t\twhat extent women, girls, and gender are taken into consideration in\n\t\t\tpeace agreements around the world.\n\t\t</p>\n\t</div>\n\t<br />\n\t<p style=\"font-weight: 700;\">SCROLL DOWN</p>\n\t<img src=\"./img/down.svg\" alt=\"scroll down\" class=\"scroll-down-icon\" />\n</Header>\n\n<div class=\"filler\" bind:this={scrollerRefAgreement}>\n\t<div id=\"text_field\">\n\t\t<p style=\"text-align: center;\">\n\t\t\tA <strong>peace agreement</strong> is a document produced after\n\t\t\tdiscussion with conflict protagonists and mutually agreed to by\n\t\t\tthem, addressing conflict with a view to ending it. <br /><br />\n\t\t\tThe\n\t\t\t<a href=\"https://pax.peaceagreements.org/agreements/search/\"\n\t\t\t\t>PA-X Peace Agreement Database</a\n\t\t\t>\n\t\t\tcollects and archives formal, publicly-available, signed peace agreements.\n\t\t\tPA-X Gender is a sub-database of PA-X that includes agreements that contain\n\t\t\tmentions to Women, Girls or Gender. Below is a ceasefire agreement from\n\t\t\t1990 Nicaragua.\n\t\t</p>\n\t</div>\n</div>\n\n<div class=\"filler\">\n\t<a\n\t\thref=\"https://pax.peaceagreements.org/agreements/wgg/589/\"\n\t\ttarget=\"_blank\"\n\t\tstyle=\"color: white;\"\n\t>\n\t\t<img\n\t\t\tsrc=\"./img/toncontin.png\"\n\t\t\talt=\"peace agreement example\"\n\t\t\tstyle=\"width: 100%; box-shadow: rgba(0, 0, 0, 0.35) 0px 5px 15px;\"\n\t\t/>\n\t</a>\n</div>\n\n<div class=\"filler\">\n\t<div id=\"text_field\">\n\t\t<p style=\"text-align: center;\">\n\t\t\tIn 2000, the United Nations Security Council passed Resolution 1325\n\t\t\ton Women, Peace, and Security, calling on all actors involved in\n\t\t\tnegotiating and implementing peace agreements to adopt a gender\n\t\t\tperspective, including the following:\n\t\t</p>\n\t</div>\n</div>\n\n<div id=\"icons\">\n\t<div class=\"icon-item\">\n\t\t<img\n\t\t\tsrc=\"./img/fir.svg\"\n\t\t\talt=\"peace agreement example\"\n\t\t\tstyle=\"height: 100px;\"\n\t\t/>\n\t\t<p\n\t\t\tstyle=\"text-align: center; font-size: 14px; padding-left: 10%; padding-right: 10%;\"\n\t\t>\n\t\t\tResponding to the special needs of women and girls during\n\t\t\trepatriation, resettlement, rehabilitation, reintegration and\n\t\t\tpost-conflict reconstruction\n\t\t</p>\n\t</div>\n\t<div class=\"icon-item\">\n\t\t<img\n\t\t\tsrc=\"./img/sec.svg\"\n\t\t\talt=\"peace agreement example\"\n\t\t\tstyle=\"height: 100px;\"\n\t\t/>\n\t\t<p\n\t\t\tstyle=\"text-align: center; font-size: 14px; padding-left: 10%; padding-right: 10%\"\n\t\t>\n\t\t\tSupporting local women’s and indigenous initiatives for conflict\n\t\t\tresolution, and involving women in all implementation mechanisms\n\t\t</p>\n\t</div>\n\t<div class=\"icon-item\">\n\t\t<img\n\t\t\tsrc=\"./img/thi.svg\"\n\t\t\talt=\"peace agreement example\"\n\t\t\tstyle=\"height: 100px;\"\n\t\t/>\n\t\t<p\n\t\t\tstyle=\"text-align: center; font-size: 14px; padding-left: 10%; padding-right: 10%\"\n\t\t>\n\t\t\tEnsuring the protection of human rights of women and girls,\n\t\t\tparticularly relating to the constitution, the electoral system, the\n\t\t\tpolice and the judiciary\n\t\t</p>\n\t</div>\n</div>\n\n<div class=\"filler\">\n\t<div id=\"text_field\">\n\t\t<p style=\"text-align: center; background-color:white\">\n\t\t\tWhy should peace agreements incorporate a gender perspective?\n\t\t</p>\n\t</div>\n</div>\n\n<div id=\"icons\">\n\t<div class=\"icon-item\">\n\t\t<img\n\t\t\tsrc=\"./img/blueprint.png\"\n\t\t\talt=\"peace agreement example\"\n\t\t\tstyle=\"height: 100px;\"\n\t\t/>\n\t\t<p\n\t\t\tstyle=\"text-align: center; font-size: 14px; padding-left: 5%; padding-right: 5%\"\n\t\t>\n\t\t\t<strong\n\t\t\t\t>Peace agreements can provide a formalised blueprint to shape\n\t\t\t\tthe political settlement that emerges from a peace deal.</strong\n\t\t\t> <br /><br /> This can have consequences for how women, gender minorities,\n\t\t\tand sexual minorities may experience the transition that the peace agreement\n\t\t\tstipulates.\n\t\t</p>\n\t</div>\n\t<div class=\"icon-item\">\n\t\t<img\n\t\t\tsrc=\"./img/negotiation.png\"\n\t\t\talt=\"peace agreement example\"\n\t\t\tstyle=\"height: 100px;\"\n\t\t/>\n\t\t<p\n\t\t\tstyle=\"text-align: center; font-size: 14px; padding-left: 5%; padding-right: 5%\"\n\t\t>\n\t\t\t<strong\n\t\t\t\t>Peace agreements can create 'sticky' institutional arrangements\n\t\t\t\tthat can be hard to later re-negotiate.</strong\n\t\t\t> <br /><br />Any gaps in how the peace agreement understands or\n\t\t\tresponds to gender, may become stuck and difficult to resolve\n\t\t\tthrough institutional mechanisms.\n\t\t</p>\n\t</div>\n\t<div class=\"icon-item\">\n\t\t<img\n\t\t\tsrc=\"./img/gender.png\"\n\t\t\talt=\"peace agreement example\"\n\t\t\tstyle=\"height: 100px;\"\n\t\t/>\n\t\t<p\n\t\t\tstyle=\"text-align: center; font-size: 14px; padding-left: 5%; padding-right: 5%\"\n\t\t>\n\t\t\t<strong>Peace agreements are not gender neutral by default.</strong\n\t\t\t><br /><br />\n\t\t\tThey contain institutional configurations, security mechanisms and human\n\t\t\trights regimes that all shape different gender outcomes or impacts women's\n\t\t\tlives.\n\t\t</p>\n\t</div>\n\t<div id=\"text_field\">\n\t\t<p style=\"text-align: center;\">\n\t\t\tHear more on this from PeaceRep Women Peace and Security expert,\n\t\t\tLaura Wise in this short, informative <a\n\t\t\t\thref=\"https://www.youtube.com/watch?v=52GFh0r6Zj8\"\n\t\t\t\ttarget=\"_blank\"\n\t\t\t\tstyle=\"color: black;\">video</a\n\t\t\t> (3 mins).\n\t\t</p>\n\t</div>\n</div>\n\n<div class=\"filler\" bind:this={scrollerRefGeo}>\n\t<div id=\"text_field\">\n\t\t<p style=\"text-align: center;\">\n\t\t\tPA-X contains 2,144 peace agreements that have been signed since\n\t\t\t1990. The map below shows the geographical spread of where these\n\t\t\tagreements are from and the primary location of the conflict they\n\t\t\tare addressing.\n\t\t</p>\n\t</div>\n</div>\n\n<!-- Map -->\n<Scroller {threshold} bind:id={id[\"map\"]} splitscreen={false} shadow={false}>\n\t<div slot=\"background\">\n\t\t<figure>\n\t\t\t<div class=\"col-wide height-full\">\n\t\t\t\t<div class=\"map\">\n\t\t\t\t\t<Geography\n\t\t\t\t\t\t{mygeojson}\n\t\t\t\t\t\t{pax}\n\t\t\t\t\t\t{pax_timeline}\n\t\t\t\t\t\t{pax_gender}\n\t\t\t\t\t\t{step}\n\t\t\t\t\t\ton:mapLoaded={handleMapLoaded}\n\t\t\t\t\t/>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t</figure>\n\t</div>\n\n\t<div slot=\"foreground\">\n\t\t<section data-id=\"map01\">\n\t\t\t<div class=\"col-medium\">\n\t\t\t\t<p style=\"text-align: center;\">\n\t\t\t\t\tDarker colour (black) indicates a higher number of peace\n\t\t\t\t\tagreements signed. <span style=\"color: gray;\"\n\t\t\t\t\t\t>[<i\n\t\t\t\t\t\t\t>hover over a country for the exact number of peace\n\t\t\t\t\t\t\tagreements</i\n\t\t\t\t\t\t>]</span\n\t\t\t\t\t>\n\t\t\t\t</p>\n\t\t\t</div>\n\t\t</section>\n\t\t<section data-id=\"map02\">\n\t\t\t<div class=\"col-medium\">\n\t\t\t\t<p style=\"text-align: center;\">\n\t\t\t\t\tNow, the map shows the number of peace agreements that\n\t\t\t\t\tcontain at least <strong>two</strong> references to women, girls,\n\t\t\t\t\tand gender.\n\t\t\t\t</p>\n\t\t\t</div>\n\t\t</section>\n\t</div>\n</Scroller>\n\n<div class=\"filler\" bind:this={scrollerRefRectangles}>\n\t<div id=\"text_field\">\n\t\t<p style=\"text-align: center;\">\n\t\t\tTo get a better idea about how often women, girls and gender are\n\t\t\ttaken into consideration in peace agreements, below is a\n\t\t\trepresentation of all peace agreements in PA-X.\n\t\t</p>\n\t</div>\n</div>\n\n<!-- RECTANGLES -->\n<Scroller {threshold} bind:id={id[\"rect\"]} splitscreen={false} shadow={false}>\n\t<div slot=\"background\">\n\t\t<figure>\n\t\t\t<div class=\"col-wide height-full\">\n\t\t\t\t<div class=\"rect\">\n\t\t\t\t\t<Rectangles {pax} {step} />\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t</figure>\n\t</div>\n\n\t<div slot=\"foreground\">\n\t\t<section data-id=\"rect01\">\n\t\t\t<div class=\"col-medium\">\n\t\t\t\t<p style=\"text-align: center;\">\n\t\t\t\t\tEvery rectangle in this view represents one of the 2,144\n\t\t\t\t\tformal agreements signed since 1990.\n\t\t\t\t</p>\n\t\t\t</div>\n\t\t</section>\n\t\t<section data-id=\"rect02\">\n\t\t\t<div class=\"col-medium\">\n\t\t\t\t<p style=\"text-align: center;\">\n\t\t\t\t\tOut of all these agreements, less than a quarter contain\n\t\t\t\t\treferences to women, girls, and gender (465 agreements).\n\t\t\t\t</p>\n\t\t\t</div>\n\t\t</section>\n\t</div>\n</Scroller>\n\n<div class=\"filler\" bind:this={scrollerRefReason}>\n\t<div id=\"text_field\">\n\t\t<p style=\"text-align: center\">\n\t\t\tHow did UNSCR 1325 influence the number of gender-related peace\n\t\t\tagreements over time?\n\t\t</p>\n\t</div>\n</div>\n\n<!-- TIME -->\n<Scroller {threshold} bind:id={id[\"area\"]} splitscreen={false} shadow={false}>\n\t<div slot=\"background\">\n\t\t<figure>\n\t\t\t<div class=\"col-wide height-full\">\n\t\t\t\t<div class=\"area\">\n\t\t\t\t\t<Area {pax} {pax_timeline} {step} />\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t</figure>\n\t</div>\n\n\t<div slot=\"foreground\">\n\t\t<section data-id=\"area01\">\n\t\t\t<div class=\"col-medium\">\n\t\t\t\t<p style=\"text-align: center;\">\n\t\t\t\t\tThis area chart shows the number of peace agreements signed\n\t\t\t\t\tper year since 1990.\n\t\t\t\t</p>\n\t\t\t</div>\n\t\t</section>\n\t\t<section data-id=\"area02\">\n\t\t\t<div class=\"col-medium\">\n\t\t\t\t<p style=\"text-align: center;\">\n\t\t\t\t\tThe dark area chart shows the number of peace agreements\n\t\t\t\t\tcontaining references to women, girls, and gender.\n\t\t\t\t</p>\n\t\t\t</div>\n\t\t</section>\n\t</div>\n</Scroller>\n\n<div class=\"filler\" bind:this={scrollerRefStages}>\n\t<div id=\"text_field\">\n\t\t<p style=\"text-align: center\">\n\t\t\tThere are different <strong>stages of peace processes</strong>\n\t\t\tdepending on the content included in agreements: from pre-neogtiation\n\t\t\tagreements where there are 'talks about talks', to ceasefires, to more\n\t\t\tcomprehensive agreements and implementation agreements.<br /><br />\n\t\t\tIf the process went smoothly from one stage to the next it would look\n\t\t\tlike this over time:\n\t\t</p>\n\t</div>\n</div>\n\n<div class=\"filler\">\n\t<img\n\t\tsrc=\"./img/messy_1.png\"\n\t\talt=\"messy timeline visualization picutre\"\n\t\tstyle=\"width: 100%;\"\n\t/>\n</div>\n\n<div class=\"filler\">\n\t<div id=\"text_field\">\n\t\t<p style=\"text-align:center\">\n\t\t\tInstead, peace processes frequently involve a series of\n\t\t\tback-and-forth movements, reflecting the reality that progress is\n\t\t\trarely uniform or predictable. For example, here is the trajectory\n\t\t\tof the Philippines-Mindanao Process.\n\t\t</p>\n\t</div>\n</div>\n\n<div class=\"filler\">\n\t<img\n\t\tsrc=\"./img/messy_2.png\"\n\t\talt=\"peace agreement example\"\n\t\tstyle=\"width: 100%;\"\n\t/>\n\t<p style=\"color: black;\">\n\t\tExplore the trajectory of other processes in PA-X on our <a\n\t\t\thref=\"https://pax.peaceagreements.org/visualizations/messy-peace-processes/\"\n\t\t\ttarget=\"_blank\"\n\t\t\tstyle=\"color: black;\">Messy Timeline Visualization</a\n\t\t>\n\t</p>\n</div>\n\n<div class=\"filler\">\n\t<div id=\"text_field\">\n\t\t<p style=\"text-align: center\">\n\t\t\tAt which stage of peace negotiations do women, girls, and gender get\n\t\t\tdiscussed?\n\t\t</p>\n\t</div>\n</div>\n\n<!-- STAGES -->\n<Scroller {threshold} bind:id={id[\"stage\"]} splitscreen={false} shadow={false}>\n\t<div slot=\"background\">\n\t\t<figure>\n\t\t\t<div class=\"col-wide height-full\">\n\t\t\t\t<div class=\"stage\">\n\t\t\t\t\t<Stages {pax_stages} {pax} {step} />\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t</figure>\n\t</div>\n\n\t<div slot=\"foreground\">\n\t\t<section data-id=\"stage01\">\n\t\t\t<div class=\"col-medium\">\n\t\t\t\t<p style=\"text-align: center;\">\n\t\t\t\t\tWhen viewing all PA-X agreements by the stage of the peace\n\t\t\t\t\tprocess they were signed at, the chart below shows the\n\t\t\t\t\tpredominance of <strong>pre-negotiation/process</strong>,\n\t\t\t\t\t<strong>ceasefire</strong>, and\n\t\t\t\t\t<strong>substantive-partial</strong> agreements.\n\t\t\t\t</p>\n\t\t\t</div>\n\t\t</section>\n\t\t<section data-id=\"stage02\">\n\t\t\t<div class=\"col-medium\">\n\t\t\t\t<p style=\"text-align: center;\">\n\t\t\t\t\tA common perception is that dealing with 'gender' must wait\n\t\t\t\t\tuntil substantive stages of negotiations (partial and\n\t\t\t\t\tcomprehensive), so that the earlier pre-negotiation or\n\t\t\t\t\tceasefire talks can focus on more 'urgent' issues.\n\t\t\t\t</p>\n\t\t\t</div>\n\t\t</section>\n\t\t<section>\n\t\t\t<div class=\"col-medium\">\n\t\t\t\t<p style=\"text-align: center;\">\n\t\t\t\t\tHowever, gendered issues can be included in agreements at\n\t\t\t\t\tany stage of a peace process.\n\t\t\t\t</p>\n\t\t\t</div>\n\t\t</section>\n\t\t<section data-id=\"stage03\">\n\t\t\t<div class=\"col-medium\">\n\t\t\t\t<p style=\"text-align: center;\">\n\t\t\t\t\tFor example, a ceasefire in Central African Republic in 2014\n\t\t\t\t\t- the <a\n\t\t\t\t\t\thref=\"https://pax.peaceagreements.org/media/documents/ag818_573ed266c7c9c.pdf\"\n\t\t\t\t\t\ttarget=\"_blank\"\n\t\t\t\t\t\tstyle=\"color: black;\"\n\t\t\t\t\t\t>Brazzaville Agreement on Cessation of Hostilities</a\n\t\t\t\t\t> - included 'gender' by stipulating that under the agreement\n\t\t\t\t\tthe parties would cease the act of sexual violence.\n\t\t\t\t</p>\n\t\t\t</div>\n\t\t</section>\n\t</div>\n</Scroller>\n\n<div class=\"filler\" bind:this={scrollerRefTime}>\n\t<div id=\"text_field\">\n\t\t<p style=\"text-align: center\">\n\t\t\tBeyond the numbers, gender references differ hugely in terms of\n\t\t\ttheir substantive quality and specificity, ranging from detailed\n\t\t\tcommitments to rhetorical references to 'women'.\n\t\t</p>\n\t</div>\n</div>\n\n<!-- TIME -->\n<Scroller {threshold} bind:id={id[\"time\"]} splitscreen={false} shadow={false}>\n\t<div slot=\"background\">\n\t\t<figure>\n\t\t\t<div class=\"col-wide height-full\">\n\t\t\t\t<div class=\"time\">\n\t\t\t\t\t<Timeline {pax} {pax_timeline} {step} />\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t</figure>\n\t</div>\n\n\t<div slot=\"foreground\">\n\t\t<section>\n\t\t\t<div class=\"col-medium\">\n\t\t\t\t<p style=\"text-align: center;\">\n\t\t\t\t\tThese are all peace agreements signed since 1990, each\n\t\t\t\t\trepresented as a line.\n\t\t\t\t</p>\n\t\t\t</div>\n\t\t</section>\n\t\t<section data-id=\"time01\">\n\t\t\t<div class=\"col-medium\">\n\t\t\t\t<p style=\"text-align: center;\">\n\t\t\t\t\tLet’s explore gender reference quality and specificity\n\t\t\t\t\tthrough three focus areas of a gender perspective according\n\t\t\t\t\tto UNSCR 1325: women’s special needs during rehabilitation\n\t\t\t\t\tand reconstruction, involving women in implementation, and\n\t\t\t\t\tprotecting the human rights of women and girls.\n\t\t\t\t</p>\n\t\t\t</div>\n\t\t</section>\n\t\t<section data-id=\"time04\">\n\t\t\t<div class=\"col-medium\">\n\t\t\t\t<p style=\"text-align: center;\">\n\t\t\t\t\tFor example, only these highlighted agreements include\n\t\t\t\t\tsubstantive references to the special needs of women and\n\t\t\t\t\tgirls during rehabilitation and reconstruction. However,\n\t\t\t\t\tthey often are not a large proportion of the agreement\n\t\t\t\t\tfocus.\n\t\t\t\t</p>\n\t\t\t</div>\n\t\t</section>\n\t\t<section data-id=\"time05\">\n\t\t\t<div class=\"col-medium\">\n\t\t\t\t<p style=\"text-align: center;\">\n\t\t\t\t\tOne instance is the <a\n\t\t\t\t\t\thref=\"https://pax.peaceagreements.org/media/documents/ag478_55d493ee828e7.pdf\"\n\t\t\t\t\t\ttarget=\"_blank\"\n\t\t\t\t\t\tstyle=\"color: black\">Lome Agreement</a\n\t\t\t\t\t>\n\t\t\t\t\tfor Sierra Leone in 1999 that acknowledged women's victimization\n\t\t\t\t\tduring the war, and stated that\n\t\t\t\t\t<i style=\"font-size: 18px;\"\n\t\t\t\t\t\t>'special attention shall be accorded to their needs and\n\t\t\t\t\t\tpotentials in formulating and implementing national\n\t\t\t\t\t\trehabilitation, reconstruction and development\n\t\t\t\t\t\tprogrammes, to enable them to play a central role in the\n\t\t\t\t\t\tmoral, social and physical reconstruction of Sierra\n\t\t\t\t\t\tLeone.'</i\n\t\t\t\t\t> This was the only reference to gender (highlighted in red)\n\t\t\t\t\tin the entire agreement text.\n\t\t\t\t</p>\n\t\t\t</div>\n\t\t</section>\n\t\t<section data-id=\"time06\">\n\t\t\t<div class=\"col-medium\">\n\t\t\t\t<p style=\"text-align: center;\">\n\t\t\t\t\tThe highlighted peace agreements include references to women\n\t\t\t\t\tplaying a role in implementing the agreement.\n\t\t\t\t</p>\n\t\t\t</div>\n\t\t</section>\n\t\t<section data-id=\"time07\">\n\t\t\t<div class=\"col-medium\">\n\t\t\t\t<p style=\"text-align: center;\">\n\t\t\t\t\tFor example, the 2016 <a\n\t\t\t\t\t\thref=\"https://pax.peaceagreements.org/media/documents/ag1845_593e97bdd6f32.pdf\"\n\t\t\t\t\t\ttarget=\"_blank\"\n\t\t\t\t\t\tstyle=\"color: black;\">Final Agreement</a\n\t\t\t\t\t> between the Colombian Government and the FARC set up a special\n\t\t\t\t\tforum comprising representatives from 6 national and regional\n\t\t\t\t\tColombian women's organisations, to work with the implementation\n\t\t\t\t\tcommission on monitoring and guaranteeing the rights of women\n\t\t\t\t\tin the implementation of the peace agreement.\n\t\t\t\t</p>\n\t\t\t</div>\n\t\t</section>\n\t\t<section data-id=\"time08\">\n\t\t\t<div class=\"col-medium\">\n\t\t\t\t<p style=\"text-align: center;\">\n\t\t\t\t\tTurning to the protection of human rights of women and\n\t\t\t\t\tgirls, the highlighted peace agreements include references\n\t\t\t\t\tto <strong>international human rights laws</strong> relating\n\t\t\t\t\tto women and gender, including specific human rights standards.\n\t\t\t\t</p>\n\t\t\t</div>\n\t\t</section>\n\t\t<section data-id=\"time09\">\n\t\t\t<div class=\"col-medium\">\n\t\t\t\t<p style=\"text-align: center;\">\n\t\t\t\t\tFor example, in a 1996 <a\n\t\t\t\t\t\thref=\"https://pax.peaceagreements.org/media/documents/ag291_5630f71a3ae07.pdf\"\n\t\t\t\t\t\tstyle=\"color: black;\"\n\t\t\t\t\t\ttarget=\"_blank\">peace agreement from Guatemala</a\n\t\t\t\t\t>, the government agreed to revise national legislation to\n\t\t\t\t\teliminate all forms of discrimination against women, and to\n\t\t\t\t\tgive effect to the government commitments deriving from the\n\t\t\t\t\tratification of the Convention on the Elimination of All\n\t\t\t\t\tForms of Discrimination against Women.\n\t\t\t\t</p>\n\t\t\t</div>\n\t\t</section>\n\t</div>\n</Scroller>\n\n<div class=\"filler\" bind:this={scrollerRefDend}>\n\t<div id=\"text_field\">\n\t\t<p style=\"text-align: center\">\n\t\t\tAs you can see, peace agreements cover different topics related to\n\t\t\twomen, girls and gender. Sometimes there are a lot of topics\n\t\t\taddressed, and sometimes there are very few. <br /><br />\n\t\t\tBelow shows a representation of all topics related to women, girls and\n\t\t\tgender that are coded for all agreements in PA-X Gender.\n\t\t</p>\n\t</div>\n</div>\n\n<Scroller {threshold} bind:id={id[\"afgh\"]} splitscreen={false} shadow={false}>\n\t<div slot=\"background\">\n\t\t<figure>\n\t\t\t<div class=\"col-wide height-full\">\n\t\t\t\t<div class=\"afgh\">\n\t\t\t\t\t<Dendrogram {pax_gender} {step} {categories} />\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t</figure>\n\t</div>\n\n\t<div slot=\"foreground\">\n\t\t<section data-id=\"afgh01\">\n\t\t\t<div class=\"col-medium\">\n\t\t\t\t<p style=\"text-align: center;\">\n\t\t\t\t\tThis is the distribution of gender-related topic in all 436\n\t\t\t\t\tagreements. You can see the majority of references across\n\t\t\t\t\tall the agreements are regarding women's participation, and\n\t\t\t\t\tsexual violence.\n\t\t\t\t</p>\n\t\t\t</div>\n\t\t</section>\n\t\t<section data-id=\"afgh02\">\n\t\t\t<div class=\"col-medium\">\n\t\t\t\t<p style=\"text-align: center;\">\n\t\t\t\t\tThe earlier referenced Toncontin Agreement from 1990,\n\t\t\t\t\tincludes these gender-related topics.\n\t\t\t\t</p>\n\t\t\t</div>\n\t\t</section>\n\t\t<section data-id=\"afgh03\">\n\t\t\t<div class=\"col-medium\">\n\t\t\t\t<p style=\"text-align: center;\">\n\t\t\t\t\tIn contrast, the more recent 2016 Colombian Final Agreement\n\t\t\t\t\tincludes these topics.\n\t\t\t\t</p>\n\t\t\t</div>\n\t\t</section>\n\t\t<section data-id=\"afgh04\">\n\t\t\t<div class=\"col-medium\">\n\t\t\t\t<p style=\"text-align: center;\">\n\t\t\t\t\tYou can choose an agreement from the list on the right.\n\t\t\t\t</p>\n\t\t\t</div>\n\t\t</section>\n\t</div>\n</Scroller>\n\n<div class=\"filler\">\n\t<div id=\"text_field\">\n\t\t<p style=\"text-align: center\">\n\t\t\tPA-X Gender shows that 25 years after UNSCR 1325 was passed, peace\n\t\t\tagreements still do not consistently incorporate a gender\n\t\t\tperspective.\n\t\t\t<br /><br /><br />\n\t\t\tHowever, women and their allies continue to push for peace processes\n\t\t\tto recognise the importance of gender, both from within and outside of\n\t\t\tformal institutions.\n\t\t\t<br /><br /><br />\n\t\t\tPA-X Gender is an archive of processes where women were successful at\n\t\t\tgetting gender into peace agreements, and pays tribute to their historical\n\t\t\tefforts.\n\t\t</p>\n\t</div>\n</div>\n\n<div class=\"filler\" bind:this={scrollerRefResearch}>\n\t<p style=\"text-align: center; color: black\">\n\t\tExplore our research and data on gender in peace agreements, and how\n\t\tthis work informs Women, Peace and Security monitoring.\n\t</p>\n\t<div id=\"research_field\">\n\t\t<div class=\"research_item\">\n\t\t\t<a\n\t\t\t\thref=\"https://www.peaceagreements.org/agreements/wggsearch/\"\n\t\t\t\ttarget=\"_blank\"\n\t\t\t>\n\t\t\t\t<img src=\"./img/gender_db.png\" alt=\"PA-X Gender Database\" />\n\t\t\t</a>\n\t\t\t<p>PA-X Gender Database</p>\n\t\t</div>\n\t\t<div class=\"research_item\">\n\t\t\t<a\n\t\t\t\thref=\"https://peacerep.org/2025/07/24/women-peace-and-security-at-25/\"\n\t\t\t\ttarget=\"_blank\"\n\t\t\t>\n\t\t\t\t<img\n\t\t\t\t\tsrc=\"./img/one.png\"\n\t\t\t\t\talt=\"Women, Peace and Security at 25\"\n\t\t\t\t/>\n\t\t\t</a>\n\t\t\t<p>\n\t\t\t\tWomen, Peace and Security at 25: Assessing Implementation\n\t\t\t\tthrough Gender Perspectives in Peace Agreements\n\t\t\t</p>\n\t\t</div>\n\t\t<div class=\"research_item\">\n\t\t\t<a\n\t\t\t\thref=\"https://peacerep.org/2024/10/28/un-report-cites-peacerep-research-on-stagnation-of-gender-references-in-peace-agreements/\"\n\t\t\t\ttarget=\"_blank\"\n\t\t\t>\n\t\t\t\t<img\n\t\t\t\t\tsrc=\"./img/two.png\"\n\t\t\t\t\talt=\"UN Report Cites PeaceRep Research\"\n\t\t\t\t/>\n\t\t\t</a>\n\t\t\t<p>\n\t\t\t\tUN Report Cites PeaceRep Research on Stagnation of Gender\n\t\t\t\tReferences in Peace Agreements\n\t\t\t</p>\n\t\t</div>\n\t\t<div class=\"research_item\">\n\t\t\t<a\n\t\t\t\thref=\"https://peacerep.org/publication/principled-pragmatism-and-the-inclusion-project-implementing-a-gender-perspective-in-peace-agreements/\"\n\t\t\t\ttarget=\"_blank\"\n\t\t\t>\n\t\t\t\t<img src=\"./img/four.png\" alt=\"Principled Pragmatism Paper\" />\n\t\t\t</a>\n\t\t\t<p>\n\t\t\t\tPrincipled Pragmatism and the ‘Inclusion Project’: Implementing\n\t\t\t\ta Gender Perspective in Peace Agreements\n\t\t\t</p>\n\t\t</div>\n\t\t<div class=\"research_item\">\n\t\t\t<a\n\t\t\t\thref=\"https://peacerep.org/digital-resources/peacefem/\"\n\t\t\t\ttarget=\"_blank\"\n\t\t\t>\n\t\t\t\t<img src=\"./img/three.png\" alt=\"PeaceFem App\" />\n\t\t\t</a>\n\t\t\t<p>PeaceFem</p>\n\t\t</div>\n\t</div>\n</div>\n\n<style>\n\th1 {\n\t\tfont-size: 1em;\n\t}\n\n\tp {\n\t\tfont-size: 0.8em;\n\t}\n\n\t#indicator {\n\t\tposition: fixed; /* stays fixed when scrolling */\n\t\ttop: 50%; /* halfway down the screen */\n\t\tleft: 0; /* stick to the left edge */\n\t\ttransform: translateY(-50%); /* shift up by half its height */\n\n\t\tdisplay: flex; /* flexbox for layout */\n\t\tflex-direction: column; /* stack children vertically */\n\t\talign-items: left; /* center images horizontally inside */\n\t\tgap: 12px; /* spacing between images */\n\t\tpadding: 5px; /* optional, keeps from touching edge */\n\t\tz-index: 99;\n\t}\n\n\t#indicator > div {\n\t\tposition: relative; /* so tooltip positions relative to each icon */\n\t\tcursor: pointer;\n\t}\n\n\t#indicator > div::after {\n\t\tcontent: attr(data-tooltip);\n\t\tposition: absolute;\n\t\tleft: 35px; /* place to the right of the icon */\n\t\ttop: 50%;\n\t\ttransform: translateY(-50%);\n\t\twhite-space: nowrap;\n\n\t\tbackground: white;\n\t\tcolor: black;\n\t\tfont-size: 14px;\n\t\tfont-weight: 400;\n\t\tpadding: 4px 8px;\n\t\tborder-radius: 4px;\n\t\topacity: 0;\n\t\tpointer-events: none;\n\t\ttransition: opacity 0.2s ease;\n\t}\n\n\t#indicator > div:hover::after {\n\t\topacity: 1;\n\t}\n\n\t.scroll-line-agmt img,\n\t.scroll-line-rect img,\n\t.scroll-line-reason img,\n\t.scroll-line-dendr img,\n\t.scroll-line-time img,\n\t.scroll-line-stage img,\n\t.scroll-line-research img,\n\t.scroll-line-geo img {\n\t\theight: 25px;\n\t\tpadding: 3px;\n\t\tcursor: pointer;\n\t\topacity: 0.5;\n\t\ttransition: transform 0.2s ease;\n\t}\n\n\t.scroll-line-agmt img:hover,\n\t.scroll-line-rect img:hover,\n\t.scroll-line-reason img:hover,\n\t.scroll-line-dendr img:hover,\n\t.scroll-line-time img:hover,\n\t.scroll-line-stage img:hover,\n\t.scroll-line-research img:hover,\n\t.scroll-line-geo img:hover {\n\t\ttransform: scale(1.2);\n\t}\n\n\t.filler {\n\t\ttext-align: center;\n\t\tpadding: 5%;\n\t\tjustify-content: center;\n\t\tdisplay: flex;\n\t\tflex-direction: column;\n\t}\n\n\t#loading_screen {\n\t\twidth: 100%;\n\t\theight: 100%;\n\t\tposition: absolute;\n\t\ttop: 0px;\n\t\tleft: 0px;\n\t\tbackground-color: white;\n\t\tdisplay: flex;\n\t\tjustify-content: center;\n\t\tz-index: 100;\n\t}\n\n\t#loading_text {\n\t\tposition: absolute;\n\t\ttop: 40%;\n\t\tcolor: black;\n\t\tmargin: 0px;\n\t\tfont-weight: 300;\n\t\tfont-size: 20px;\n\t}\n\n\t#loading_button {\n\t\tfont-family: \"Montserrat\";\n\t\tbox-shadow: rgba(0, 0, 0, 0.35) 0px 1px 5px;\n\t\tfont-size: 16px;\n\t\tfont-weight: 400;\n\t\tposition: absolute;\n\t\ttop: 40%;\n\t\tbackground-color: white;\n\t\tcolor: black;\n\t\tborder: 1px solid rgb(199, 199, 199);\n\t\tborder-radius: 5px;\n\t\tpadding: 15px 15px;\n\t\tcursor: pointer;\n\t\ttransition:\n\t\t\tbackground-color 0.2s ease,\n\t\t\tcolor 0.2s ease;\n\t\tvisibility: hidden;\n\t}\n\n\t#loading_button:hover {\n\t\tbackground-color: rgb(44, 44, 44);\n\t\tcolor: white;\n\t}\n\n\t.rect,\n\t.time,\n\t.area,\n\t.map,\n\t.stage,\n\t.afgh {\n\t\tmargin-top: 40px;\n\t\twidth: calc(100% - 5px);\n\t}\n\n\t#icons {\n\t\tmargin: 100px;\n\t\tdisplay: flex;\n\t\tflex-wrap: wrap;\n\t\tjustify-content: space-between;\n\t\tcolor: black;\n\t\tbox-sizing: border-box; \n\t}\n\n\t.icon-item {\n\t\tflex: 1 1 calc(33.33% - 10px); \n\t\tmargin: 5px;\n\t\ttext-align: center;\n\t\tpadding: 50px 20px; \n\t\tbox-sizing: border-box; \n\t\tbox-shadow: rgba(0, 0, 0, 0.35) 0px 5px 15px;\n\t}\n\n\t/* Small screens */\n\t@media (max-width: 768px) {\n\t\t#icons {\n\t\t\tjustify-content: center; /* center the stacked items */\n\t\t}\n\n\t\t.icon-item {\n\t\t\tflex: 0 0 100%; /* take full width */\n\t\t\tmax-width: 100%; /* ensure no extra width */\n\t\t\tmargin: 10px 0; /* vertical spacing between items */\n\t\t}\n\t}\n\n\t#text_field {\n\t\twidth: 50%;\n\t\tmargin: auto;\n\t\tcolor: black;\n\t}\n\n\t.fa-info {\n\t\tfont-size: 24px;\n\t}\n\n\t.info {\n\t\tborder: none;\n\t\tbackground-color: white;\n\t\tcolor: black;\n\t\ttext-align: center;\n\t\ttext-decoration: none;\n\t\tdisplay: inline-block;\n\t\tposition: absolute;\n\t\ttop: 10px;\n\t\tright: 0px;\n\t\tcursor: pointer;\n\t\ttransition: transform 0.1s ease-in-out;\n\t}\n\n\t.info:hover {\n\t\ttransform: scale(1.4);\n\t}\n\n\t.info_div {\n\t\tposition: absolute;\n\t\tbox-shadow: rgba(0, 0, 0, 0.35) 0px 1px 5px;\n\t\twidth: 250px;\n\t\ttop: -100%;\n\t\tright: 40px;\n\t\tfont-size: 12px;\n\t\ttext-align: left;\n\t\tbackground-color: white;\n\t\tcolor: black;\n\t\tpadding: 20px;\n\t}\n\n\t#research_field {\n\t\tpadding-top: 40px;\n\t\tdisplay: flex;\n\t\tflex-wrap: wrap;\n\t\tjustify-content: center;\n\t\tgap: 5px;\n\t}\n\n\t.research_item {\n\t\tflex: 0 1 18%;\n\t\tdisplay: flex;\n\t\tflex-direction: column;\n\t\talign-items: center;\n\t\ttext-align: center;\n\t}\n\n\t.research_item img {\n\t\twidth: 179px;\n\t\theight: 250px;\n\t\tobject-fit: contain;\n\t\tdisplay: block;\n\t\tborder-radius: 4px;\n\t\tbox-shadow: rgba(0, 0, 0, 0.35) 0px 1px 5px;\n\t\ttransition: transform 0.1s ease-in-out;\n\t}\n\n\t.research_item img:hover {\n\t\ttransform: scale(1.1);\n\t}\n\n\t.research_item p {\n\t\tcolor: black;\n\t\tmargin-top: 15px;\n\t\tpadding: 5px;\n\t\tfont-size: 12px;\n\t}\n\n\t/* Medium screens: fewer per row */\n\t@media (max-width: 992px) {\n\t\t.research_item {\n\t\t\tflex: 0 1 30%;\n\t\t}\n\t}\n\n\t/* Small screens: stack vertically */\n\t@media (max-width: 600px) {\n\t\t.research_item {\n\t\t\tflex: 0 1 80%;\n\t\t}\n\t}\n\n\t.scroll-down-icon {\n\t\theight: 20px;\n\t\tanimation: bounce 1.5s infinite ease-in-out;\n\t}\n\n\t@keyframes bounce {\n\t\t0%,\n\t\t100% {\n\t\t\ttransform: translateY(0); /* start + end at original position */\n\t\t}\n\t\t50% {\n\t\t\ttransform: translateY(7px); /* move down */\n\t\t}\n\t}\n\n\t.rotated {\n\t\tdisplay: inline-block; /* needed so transform applies properly */\n\t\ttransform: rotate(-45deg);\n\t\tfont-size: 12px;\n\t\tfont-weight: 800;\n\t}\n</style>\n",
    "<script>\n  export let center = true;\n  export let short = false;\n\n</script>\n\n<header style=\"color: black; background-color: white;\" class:short>\n  <div\n    class=\"v-padded col-wide middle\"\n    style=\"position: relative\"\n    class:short\n    class:height-full={!short}\n  >\n    <div class:center>\n      <slot></slot>\n    </div>\n  </div>\n</header>\n\n<style>\n  .short {\n    min-height: 85vh;\n  }\n  .v-padded {\n    box-sizing: border-box;\n    padding: 50px;\n  }\n</style>\n",
    "<script context=\"module\">\n\t// Based on svelte-scroller by Rich Harris\n\t// https://github.com/sveltejs/svelte-scroller\n\t// Patched to transpile to IE 11 and allow for split-screen view option\n\n\tconst handlers = [];\n\tlet manager;\n\n\tif (typeof window !== \"undefined\") {\n\t\tconst run_all = () => handlers.forEach((fn) => fn());\n\n\t\twindow.addEventListener(\"scroll\", run_all);\n\t\twindow.addEventListener(\"resize\", run_all);\n\t}\n\n\tif (typeof IntersectionObserver !== \"undefined\") {\n\t\tconst map = new Map();\n\n\t\tconst observer = new IntersectionObserver(\n\t\t\t(entries, observer) => {\n\t\t\t\tentries.forEach((entry) => {\n\t\t\t\t\tconst update = map.get(entry.target);\n\t\t\t\t\tconst index = handlers.indexOf(update);\n\n\t\t\t\t\tif (entry.isIntersecting) {\n\t\t\t\t\t\tif (index === -1) handlers.push(update);\n\t\t\t\t\t} else {\n\t\t\t\t\t\tupdate();\n\t\t\t\t\t\tif (index !== -1) handlers.splice(index, 1);\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t},\n\t\t\t{\n\t\t\t\trootMargin: \"400px 0px\", // TODO why 400?\n\t\t\t},\n\t\t);\n\n\t\tmanager = {\n\t\t\tadd: ({ outer, update }) => {\n\t\t\t\tconst { top, bottom } = outer.getBoundingClientRect();\n\n\t\t\t\tif (top < window.innerHeight && bottom > 0)\n\t\t\t\t\thandlers.push(update);\n\n\t\t\t\tmap.set(outer, update);\n\t\t\t\tobserver.observe(outer);\n\t\t\t},\n\n\t\t\tremove: ({ outer, update }) => {\n\t\t\t\tconst index = handlers.indexOf(update);\n\t\t\t\tif (index !== -1) handlers.splice(index, 1);\n\n\t\t\t\tmap.delete(outer);\n\t\t\t\tobserver.unobserve(outer);\n\t\t\t},\n\t\t};\n\t} else {\n\t\tmanager = {\n\t\t\tadd: ({ update }) => {\n\t\t\t\thandlers.push(update);\n\t\t\t},\n\n\t\t\tremove: ({ update }) => {\n\t\t\t\tconst index = handlers.indexOf(update);\n\t\t\t\tif (index !== -1) handlers.splice(index, 1);\n\t\t\t},\n\t\t};\n\t}\n</script>\n\n<script>\n\timport { onMount } from \"svelte\";\n\n\t// config\n\texport let top = 0;\n\texport let bottom = 1;\n\texport let threshold = 0.5;\n\texport let query = \"section\";\n\texport let parallax = false;\n\texport let shadow;\n\n\t// bindings\n\texport let index = 0;\n\texport let count = 0;\n\texport let offset = 0;\n\texport let progress = 0;\n\texport let visible = false;\n\texport let splitscreen = false; // Add class to allow for split screen option\n\texport let id = null;\n\n\tlet outer;\n\tlet bgContainer; // IE patch. Container binding to update inline style\n\tlet foreground;\n\tlet background;\n\tlet left;\n\tlet sections;\n\tlet wh = 0;\n\tlet fixed;\n\tlet offset_top;\n\tlet width = 1;\n\tlet height;\n\tlet inverted;\n\n\t$: top_px = Math.round(top * wh);\n\t$: bottom_px = Math.round(bottom * wh);\n\t$: threshold_px = Math.round(threshold * wh);\n\t$: top, bottom, threshold, parallax, update();\n\n\tonMount(() => {\n\t\tsections = foreground.querySelectorAll(query);\n\t\tcount = sections.length;\n\n\t\tupdate();\n\n\t\tconst scroller = { outer, update };\n\n\t\tmanager.add(scroller);\n\t\treturn () => manager.remove(scroller);\n\t});\n\n\t// IE patch. BG container style (fixed/unfixed) set via function\n\tfunction setFixed() {\n\t\tif (bgContainer) {\n\t\t\tlet style = `position: ${fixed ? \"fixed\" : \"absolute\"}; top: 0; transform: translate(0, ${offset_top}px); width: ${width}px; z-index: ${inverted ? 3 : 1};`;\n\t\t\tbgContainer.style.cssText = style;\n\t\t}\n\t}\n\n\tfunction update() {\n\t\tif (!foreground) return;\n\n\t\t// re-measure outer container\n\t\tconst bcr = outer.getBoundingClientRect();\n\t\tleft = bcr.left;\n\t\twidth = bcr.right - bcr.left;\n\n\t\t// determine fix state\n\t\tconst fg = foreground.getBoundingClientRect();\n\t\tconst bg = background.getBoundingClientRect();\n\n\t\tvisible = fg.top < wh && fg.bottom > 0;\n\n\t\tconst foreground_height = fg.bottom - fg.top;\n\t\tconst background_height = bg.bottom - bg.top;\n\n\t\tconst available_space = bottom_px - top_px;\n\t\tprogress = (top_px - fg.top) / (foreground_height - available_space);\n\n\t\tif (progress <= 0) {\n\t\t\toffset_top = 0;\n\t\t\tif (fixed) {\n\t\t\t\tfixed = false;\n\t\t\t\tsetFixed();\n\t\t\t} // Non-IE specific patch to avoid setting style repeatedly\n\t\t} else if (progress >= 1) {\n\t\t\toffset_top = parallax\n\t\t\t\t? foreground_height - background_height\n\t\t\t\t: foreground_height - available_space;\n\t\t\tif (fixed) {\n\t\t\t\tfixed = false;\n\t\t\t\tsetFixed();\n\t\t\t}\n\t\t} else {\n\t\t\toffset_top = parallax\n\t\t\t\t? Math.round(\n\t\t\t\t\t\ttop_px -\n\t\t\t\t\t\t\tprogress * (background_height - available_space),\n\t\t\t\t\t)\n\t\t\t\t: top_px;\n\t\t\tif (!fixed) {\n\t\t\t\tfixed = true;\n\t\t\t\tsetFixed();\n\t\t\t}\n\t\t}\n\n\t\tfor (index = 0; index < sections.length; index += 1) {\n\t\t\tconst section = sections[index];\n\t\t\tconst { top } = section.getBoundingClientRect();\n\n\t\t\tconst next = sections[index + 1];\n\t\t\tconst bottom = next ? next.getBoundingClientRect().top : fg.bottom;\n\n\t\t\toffset = (threshold_px - top) / (bottom - top);\n\t\t\tid = section.dataset.id ? section.dataset.id : null;\n\t\t\tif (bottom >= threshold_px) break;\n\t\t}\n\t}\n\n\tlet shadow_css = ``;\n\tif (shadow) {\n\t\tshadow_css = `box-shadow: inset 0 -10px 10px -8px rgba(0, 0, 0, 1); background-color: gray`;\n\t}\n</script>\n\n<svelte:window bind:innerHeight={wh} />\n\n<svelte-scroller-outer bind:this={outer} class:splitscreen style={shadow_css}>\n\t<svelte-scroller-background-container\n\t\tclass=\"background-container\"\n\t\tbind:this={bgContainer}\n\t>\n\t\t<svelte-scroller-background bind:this={background}>\n\t\t\t<slot name=\"background\"></slot>\n\t\t</svelte-scroller-background>\n\t</svelte-scroller-background-container>\n\n\t<svelte-scroller-foreground bind:this={foreground}>\n\t\t<slot name=\"foreground\"></slot>\n\t</svelte-scroller-foreground>\n</svelte-scroller-outer>\n\n<style>\n\tsvelte-scroller-outer {\n\t\tdisplay: block;\n\t\tposition: relative;\n\t\tmax-width: 100%;\n\t}\n\n\tsvelte-scroller-background {\n\t\tdisplay: block;\n\t\tposition: relative;\n\t\twidth: 100%;\n\t}\n\n\tsvelte-scroller-foreground {\n\t\tdisplay: block;\n\t\tposition: relative;\n\t\t/* z-index: 2; */\n\t}\n\n\tsvelte-scroller-foreground::after {\n\t\tcontent: \" \";\n\t\tdisplay: block;\n\t\tclear: both;\n\t}\n\n\tsvelte-scroller-background-container {\n\t\tdisplay: block;\n\t\tposition: absolute;\n\t\twidth: 100%;\n\t\tmax-width: 100%;\n\t\tpointer-events: none;\n\t\t/* height: 100%; */\n\n\t\t/* in theory this helps prevent jumping */\n\t\twill-change: transform;\n\t\t/* -webkit-transform: translate3d(0, 0, 0);\n\t\t-moz-transform: translate3d(0, 0, 0);\n\t\ttransform: translate3d(0, 0, 0); */\n\t}\n</style>\n",
    "<script>\n    import * as d3 from \"d3\";\n    import { years } from \"../utils\";\n    import { tick } from \"svelte\";\n\n    export let pax;\n    export let pax_timeline;\n    export let step;\n\n    let tooltip = { visible: false, x: 0, y: 0, info: \"\" };\n    let width = 400;\n    let height = 400;\n    let rendered_data;\n    let background_data;\n    let innerWidth, innerHeight, xScale, yScale;\n    let imageX;\n    let imageHeight;\n    let margin = { top: 20, right: 80, bottom: 20, left: 100 };\n\n    $: innerWidth = width - margin.left - margin.right;\n    $: innerHeight = height - margin.top - margin.bottom;\n\n    $: xScale = d3\n        .scaleBand()\n        .domain(years)\n        .range([0, innerWidth])\n        .padding(0.1);\n\n    $: yScale = d3.scaleLinear().domain([0, 100]).range([innerHeight, 0]);\n\n    // area generator — define BEFORE the step-reactive block that uses it\n    $: area = d3\n        .area()\n        .x((d) => xScale(d.year) + xScale.bandwidth() / 2)\n        .y0(innerHeight)\n        .y1((d) => yScale(d.value))\n        .curve(d3.curveMonotoneX);\n\n    // initial functions (data wrangling)\n    let pax_gender_rendered;\n    $: if (pax) {\n        let pax_gender = pax.filter((d) => d.GeWom == 1);\n        let gender_grouped_years = d3.groups(pax_gender, (d) =>\n            d.Dat.substring(0, 4),\n        );\n        pax_gender_rendered = gender_grouped_years.map(([year, arr]) => ({\n            year,\n            value: arr.length,\n        }));\n\n        let grouped_years = d3.groups(pax, (d) => d.Dat.substring(0, 4));\n        rendered_data = grouped_years.map(([year, arr]) => ({\n            year,\n            value: arr.length,\n        }));\n    }\n\n    // helper collapsed version (all values -> 0)\n    const collapsedFrom = (arr) =>\n        arr ? arr.map((d) => ({ ...d, value: 0 })) : [];\n\n    // Animate in/out when `step` changes\n    $: if (pax_gender_rendered) {\n        if (step === \"area02\") {\n            d3.selectAll(\".un_resolution\").style(\"visibility\", \"visible\");\n            const path = d3.select(\".pax_area\");\n            const collapsed = collapsedFrom(pax_gender_rendered);\n            path.attr(\"d\", area(collapsed)) // ensure starting shape is collapsed\n                .style(\"opacity\", 1) // make visible before animating\n                .transition()\n                .duration(500)\n                .ease(d3.easeCubic)\n                .attr(\"d\", area(pax_gender_rendered)); // animate to full\n\n            d3.selectAll(\".gender-circles circle\")\n                .transition()\n                .duration(500)\n                .attr(\"cy\", (d, i) => yScale(pax_gender_rendered[i].value))\n                .style(\"opacity\", 1);\n\n            d3.selectAll(\".gender-circles text\")\n                .transition()\n                .duration(500)\n                .attr(\"y\", (d, i) => yScale(pax_gender_rendered[i].value) - 8)\n                .style(\"opacity\", 1);\n        } else if (step === \"area01\") {\n            d3.selectAll(\".un_resolution\").style(\"visibility\", \"hidden\");\n            const path = d3.select(\".pax_area\");\n            const collapsed = collapsedFrom(pax_gender_rendered);\n            path.transition()\n                .duration(500)\n                .ease(d3.easeCubic)\n                .attr(\"d\", area(collapsed))\n                .on(\"end\", () => path.style(\"opacity\", 0));\n\n            d3.selectAll(\".gender-circles circle\")\n                .transition()\n                .duration(800)\n                .attr(\"cy\", innerHeight)\n                .style(\"opacity\", 0);\n\n            d3.selectAll(\".gender-circles text\")\n                .transition()\n                .duration(800)\n                .attr(\"y\", innerHeight)\n                .style(\"opacity\", 0);\n        }\n    }\n\n    function formatMobile(tick) {\n        return \"'\" + tick.toString().slice(-2);\n    }\n</script>\n\n{#if rendered_data && pax_timeline}\n    <div class=\"wrapper\" bind:clientWidth={width} bind:clientHeight={height}>\n        <svg {width} {height}>\n            <g\n                class=\"timeline\"\n                transform=\"translate({margin.left}, {margin.top})\"\n            >\n                <g class=\"axis x-axis\">\n                    {#each years as tick}\n                        <g\n                            class=\"tick tick-{tick}\"\n                            transform=\"translate({xScale(tick) +\n                                xScale.bandwidth() / 2},{innerHeight + 15})\"\n                        >\n                            <text y=\"1\">\n                                {innerWidth > 800 ? tick : formatMobile(tick)}\n                            </text>\n                        </g>\n                    {/each}\n                </g>\n\n                <path\n                    d={area(rendered_data)}\n                    fill=\"#333333\"\n                    fill-opacity=\"0.4\"\n                />\n\n                <path\n                    class=\"pax_area\"\n                    d={area(\n                        pax_gender_rendered\n                            ? collapsedFrom(pax_gender_rendered)\n                            : [],\n                    )}\n                    fill=\"#333333\"\n                    fill-opacity=\"0.9\"\n                    style=\"opacity: 0;\"\n                />\n\n                <g class=\"gender-circles\">\n                    {#each pax_gender_rendered as r, i}\n                        <circle\n                            class=\"gender-circle-{i}\"\n                            cx={xScale(r.year) + xScale.bandwidth() / 2}\n                            cy={innerHeight}\n                            r=\"3\"\n                            fill=\"black\"\n                            style=\"opacity: 0;\"\n                        />\n                        <text\n                            class=\"gender-text-{i}\"\n                            x={xScale(r.year) + xScale.bandwidth() / 2}\n                            y={innerHeight}\n                            text-anchor=\"middle\"\n                            font-size=\"10\"\n                            font-weight=\"500\"\n                            fill=\"black\"\n                            style=\"opacity: 0;\"\n                        >\n                            {r.value}\n                        </text>\n                    {/each}\n                </g>\n\n                {#each rendered_data as r}\n                    <g>\n                        <circle\n                            cx={xScale(r.year) + xScale.bandwidth() / 2}\n                            cy={yScale(r.value)}\n                            r=\"3\"\n                            fill=\"black\"\n                        />\n                        <text\n                            x={xScale(r.year) + xScale.bandwidth() / 2}\n                            y={yScale(r.value) - 8}\n                            text-anchor=\"middle\"\n                            font-size=\"10\"\n                            font-weight=\"500\"\n                            fill=\"black\"\n                        >\n                            {r.value}\n                        </text>\n                    </g>\n                {/each}\n\n                <line\n                    class=\"un_resolution\"\n                    x1={xScale(\"2000\") + xScale.bandwidth() / 2}\n                    y1={20}\n                    x2={xScale(\"2000\") + xScale.bandwidth() / 2}\n                    y2={innerHeight - 80}\n                    stroke=\"gray\"\n                    stroke-width=\"1\"\n                    stroke-dasharray=\"4,4\"\n                />\n\n                <text\n                    class=\"un_resolution\"\n                    x={xScale(\"2000\") + xScale.bandwidth()}\n                    y={20}\n                    fill=\"black\"\n                >\n                    UN Resolution 1325\n                </text>\n            </g>\n        </svg>\n    </div>\n{/if}\n\n<style>\n    .wrapper {\n        height: 90vh;\n        position: relative;\n    }\n    .tick {\n        font-size: 0.725em;\n        font-weight: 200;\n    }\n\n    .un_resolution {\n        visibility: hidden;\n    }\n\n    .tick text {\n        fill: black;\n        text-anchor: start;\n        font-size: 10px;\n        font-family: \"Montserrat\";\n        font-weight: 400;\n    }\n\n    @media only screen and (max-width: 1200px) {\n        .tick text {\n            font-size: 11px;\n        }\n    }\n\n    @media only screen and (max-width: 768px) {\n        .tick text {\n            font-size: 10px;\n        }\n    }\n\n    .x-axis .tick text {\n        text-anchor: middle;\n    }\n\n    #example {\n        position: absolute;\n        top: 0;\n        left: 0;\n        width: 100%;\n        height: 100%;\n        display: flex;\n        justify-content: center;\n        overflow: hidden;\n        opacity: 0;\n        transition: 0.2s ease;\n        pointer-events: none;\n    }\n\n    #example img {\n        position: absolute;\n        background-color: #33333399;\n        border-radius: 5px;\n        top: 0px;\n        max-width: 80%;\n        padding: 10px;\n        height: auto;\n        display: block;\n    }\n\n    .un_resolution {\n        visibility: hidden;\n    }\n\n    /* .tooltip {\n        background-color: rgba(0, 0, 0, 0.9);\n        color: white;\n        padding: 10px;\n        border-radius: 2px;\n        pointer-events: none;\n        transition: opacity 0.2s ease;\n        width: 150px;\n    }\n\n    p {\n        margin: 5px;\n        font-size: 12px;\n    } */\n</style>\n",
    "<script>\n    import { tweened } from \"svelte/motion\";\n    import { cubicOut } from \"svelte/easing\";\n\n    export let i;\n    export let x;\n    export let y;\n    export let width;\n    export let height;\n    // export let info;\n\n    // Define position tween parameters with staggered delay\n    const positionTweenParams = {\n        delay: (i / 4) * Math.random(), // Delay increases with index\n        duration: 300,\n        easing: cubicOut,\n    };\n\n    const tX = tweened(null, positionTweenParams);\n    const tY = tweened(null, positionTweenParams);\n    const tWidth = tweened(null, { duration: 300, easing: cubicOut });\n    const tHeight = tweened(null, positionTweenParams);\n\n    // Update position tweens after size animation completes\n    $: tX.set(x);\n    $: tY.set(y);\n    $: tWidth.set(width);\n    $: tHeight.set(height);\n</script>\n\n<g transform=\"translate({$tX} {$tY})\">\n    <rect\n        x=\"0\"\n        y=\"0\"\n        width={$tWidth}\n        height={$tHeight}\n        rx=\"1\"\n        stroke=\"#595959\"\n        stroke-width=\"0.5\"\n    />\n</g>\n\n<style>\n    rect {\n        fill: #ffffff;\n    }\n</style>\n",
    "<script>\n\timport { onMount, onDestroy, setContext } from 'svelte';\n\n\texport let width;\n\texport let height;\n\texport let contextName = 'canvas';\n\n\tconst drawFunctions = [];\n\n\tlet canvas;\n\tlet ctx;\n\tlet pendingInvalidation = false;\n\tlet frameId;\n\n\tfunction scaleCanvas(canvas, ctx, width, height) {\n\t\tconst devicePixelRatio = window.devicePixelRatio || 1;\n\n\t\tcanvas.width = width * devicePixelRatio;\n\t\tcanvas.height = height * devicePixelRatio;\n\t\tcanvas.style.width = width + 'px';\n\t\tcanvas.style.height = height + 'px';\n\n\t\tctx.scale(devicePixelRatio, devicePixelRatio);\n\t}\n\n\tfunction update() {\n\t\tif (!ctx) return;\n\n\t\tctx.clearRect(0, 0, width, height);\n\n\t\tdrawFunctions.forEach((fn) => {\n\t\t\tctx.save();\n\t\t\tfn(ctx);\n\t\t\tctx.restore();\n\t\t});\n\n\t\tpendingInvalidation = false;\n\t}\n\n\tonMount(() => {\n\t\tctx = canvas.getContext('2d');\n\t});\n\n\tonDestroy(() => {\n\t\tif (frameId) {\n\t\t\tcancelAnimationFrame(frameId);\n\t\t}\n\t});\n\n\t$: setContext(contextName, {\n\t\tregister(fn) {\n\t\t\tdrawFunctions.push(fn);\n\t\t},\n\t\tderegister(fn) {\n\t\t\tdrawFunctions.splice(drawFunctions.indexOf(fn), 1);\n\t\t},\n\t\tinvalidate() {\n\t\t\tif (pendingInvalidation) return;\n\t\t\tpendingInvalidation = true;\n\t\t\tframeId = requestAnimationFrame(update);\n\t\t},\n\t});\n\n\t$: if (canvas && ctx) scaleCanvas(canvas, ctx, width, height);\n</script>\n\n<canvas bind:this={canvas} />\n<slot />\n\n<style>\n\t    canvas {\n        position: var(--position, absolute);\n        /* top: 15px;\n\t\tleft: 35px; */\n    }\n</style>",
    "<script>\n    import * as d3 from \"d3\";\n    import { tick } from \"svelte\";\n    import { tweened } from \"svelte/motion\";\n    import { cubicOut } from \"svelte/easing\";\n    import { onMount } from \"svelte\";\n\n    export let node;\n    export let categories;\n\n    let scaleRadius = d3.scaleLinear().domain([0, 200]).range([1.5, 25]);\n    let textElement;\n    let bbox = { x: 0, y: 0, width: 0, height: 0 };\n    let name;\n    let radius = tweened(0, { duration: 500, easing: cubicOut });\n\n    // Update radius reactively\n    $: radius.set(\n        node.data.count === undefined ? 0 : scaleRadius(node.data.count),\n    );\n\n    $: label = node.data.key === undefined ? \"pax_gender\" : node.data.key;\n\n    $: if (label && categories) {\n        let category = categories.find((cat) => cat.id === label);\n        name = category ? category.name : null;\n    }\n\n    // Update bounding box when label changes or on mount\n    function updateBBox() {\n        if (textElement) {\n            bbox = textElement.getBBox();\n        }\n    }\n\n    onMount(updateBBox);\n    $: updateBBox();\n\n    //hover actions\n    let textWidth = 0;\n    let textEl;\n\n    async function updateTextWidth() {\n        await tick();\n        if (textEl) {\n            textWidth = textEl.getBBox().width;\n        }\n    }\n\n    let hover = {\n        iso: null,\n        x: 0,\n        y: 0,\n        visible: false,\n    };\n\n    function handleMouseOver(event, node) {\n        if (node) {\n            const [x, y] = d3.pointer(event);\n            hover = {\n                iso: node.data.count,\n                x,\n                y,\n                visible: true,\n            };\n        } else {\n            hover.visible = false;\n        }\n    }\n\n    function handleMouseMove(event) {\n        const [x, y] = d3.pointer(event);\n        hover.x = x;\n        hover.y = y;\n    }\n\n    function handleMouseOut() {\n        hover.visible = false;\n    }\n\n    $: if (hover.iso) {\n        updateTextWidth();\n    }\n</script>\n\n<g transform=\"rotate({node.x - 90})translate({node.y})\">\n    <circle\n        r={$radius}\n        on:mouseover={(e) => handleMouseOver(e, node)}\n        on:mousemove={handleMouseMove}\n        on:mouseout={handleMouseOut}\n    ></circle>\n\n    <!-- Label group to apply same transform to rect and text -->\n    <g transform=\"rotate({node.x >= 180 ? 180 : 0})\">\n        <!-- Background rectangle behind text -->\n        <rect\n            x={(node.x < 180 ? 0 : -0) + bbox.x - 2}\n            y={bbox.y - 1}\n            width={bbox.width + 4}\n            height={bbox.height + 2}\n            fill={node.data.key == undefined ? \"none\" : \"white\"}\n            rx=\"2\"\n            ry=\"2\"\n        />\n\n        <!-- Label text -->\n        <text\n            bind:this={textElement}\n            x={node.x < 180 ? 15 : -15}\n            dy=\"0.32em\"\n            text-anchor={node.x < 180 ? \"start\" : \"end\"}\n            font-size=\"10\"\n            opactity={node.data.key == undefined ? 0 : 1}\n            class={\"node \" + node.data.key}\n            fill=\"black\"\n            stroke=\"white\"\n            stroke-width=\"2\"\n            paint-order=\"stroke fill\"\n            font-family=\"Montserrat\"\n        >\n            {name}\n        </text>\n    </g>\n    {#if hover.visible}\n        <g\n            transform=\"translate({hover.x + 10}, {hover.y -\n                10}) rotate({node.x >= 180 ? 180 : 0})\"\n        >\n            <rect\n                x={node.x >= 180 ? -25 : 0}\n                y={node.x >= 180 ? -15 : 0}\n                width={textWidth + 10}\n                height=\"20\"\n                fill=\"black\"\n                rx=\"3\"\n            />\n            <text\n                x={node.x >= 180 ? -20 : 5}\n                y={node.x >= 180 ? 0 : 15}\n                font-size=\"12\"\n                fill=\"white\"\n                bind:this={textEl}\n            >\n                {hover.iso}\n            </text>\n        </g>\n    {/if}\n</g>\n\n<style>\n    circle {\n        fill: #333333;\n    }\n    :global(.undefined) {\n        opacity: 0;\n    }\n</style>\n",
    "<script>\n    import * as d3 from \"d3\";\n    import { hierarchy } from \"../utils\";\n    import Circle from \"./Circle.svelte\";\n    import Select from \"svelte-select\";\n\n    export let pax_gender;\n    export let step;\n    export let categories;\n\n    let width = 400;\n    let height = 400;\n    let root;\n    let linksGenerator;\n    let radius = 100;\n    let tree = [];\n    let agt_list = [];\n    let currentUrl;\n\n    function countOccurrences(data, hierarchy) {\n        data.forEach((obj) => {\n            hierarchy.children.forEach((category) => {\n                if (obj[category.key] === \"1\") {\n                    category.count = (category.count || 0) + 1;\n                    category.agtIds = category.agtIds || [];\n                    category.agtIds.push(obj.AgtId);\n                }\n                category.children.forEach((subcategory) => {\n                    if (obj[subcategory.key] === \"1\") {\n                        subcategory.count = (subcategory.count || 0) + 1;\n                        subcategory.agtIds = subcategory.agtIds || [];\n                        subcategory.agtIds.push(obj.AgtId);\n                    }\n                });\n            });\n        });\n    }\n\n    function getWggAttributesByAgtId(dataArray, agtId) {\n        // Find the object with the matching AgtId\n        const agreement = dataArray.find((item) => item.AgtId === agtId);\n\n        if (!agreement) {\n            return []; // or throw an error / return null if preferred\n        }\n\n        // Collect keys that start with 'Wgg' and have value \"1\"\n        const wggAttributes = Object.entries(agreement)\n            .filter(([key, value]) => key.startsWith(\"Wgg\") && value === \"1\")\n            .map(([key]) => key);\n\n        wggAttributes.push(\"undefined\");\n\n        return wggAttributes;\n    }\n\n    $: if (pax_gender) {\n        let updatedTree = JSON.parse(JSON.stringify(hierarchy)); // Create a fresh copy\n        countOccurrences(pax_gender, updatedTree);\n        tree = updatedTree; // Assign the new reference to trigger reactivity\n        agt_list = pax_gender.map((d) => ({\n            Agt: d.Agt,\n            AgtId: d.AgtId,\n            Con: d.Con,\n        }));\n    }\n\n    $: if (width < height) {\n        radius = width; // Use width as the radius if it's larger\n    } else {\n        radius = height; // Use height as the radius if it's larger\n    }\n\n    $: if (height || (width && tree)) {\n        let cluster = d3.cluster().size([360, radius / 3]); // 360 means whole circle, radius - 60 means margin around dendrogram\n\n        // Create hierarchy and apply cluster layout\n        root = d3.hierarchy(tree, (d) => {\n            return d.children;\n        });\n        cluster(root); // Perform the clustering algorithm\n\n        linksGenerator = d3\n            .linkRadial()\n            .angle(function (d) {\n                return (d.x / 180) * Math.PI;\n            })\n            .radius(function (d) {\n                return d.y;\n            });\n    }\n\n    function updateTree(agt) {\n        d3.select(\"#select_agt\").style(\"visibility\", \"visible\");\n        currentUrl = `https://www.peaceagreements.org/agreements/wgg/${agt}`;\n\n        let split = pax_gender.filter((d) => d.AgtId == agt);\n        let updatedTree = JSON.parse(JSON.stringify(hierarchy)); // Create a fresh copy\n        countOccurrences(split, updatedTree);\n        tree = updatedTree; // Assign the new reference to trigger reactivity\n\n        d3.selectAll(\"path.link\").style(\"stroke\", \"#d9d9d9\");\n        d3.selectAll(\"text\").style(\"fill\", \"#d9d9d9\");\n        const highlightedWggKeys = getWggAttributesByAgtId(pax_gender, agt);\n        highlightedWggKeys.forEach((key) => {\n            d3.selectAll(\"path.\" + key).style(\"stroke\", \"black\");\n            d3.selectAll(\"text.\" + key).style(\"fill\", \"black\");\n        });\n    }\n\n    $: if (step == \"afgh01\") {\n        d3.select(\"#select_agt\").style(\"visibility\", \"hidden\");\n        let updatedTree = JSON.parse(JSON.stringify(hierarchy)); // Create a fresh copy\n        countOccurrences(pax_gender, updatedTree);\n        tree = updatedTree; // Assign the new reference to trigger reactivity\n        d3.selectAll(\"path.link\").style(\"stroke\", \"#808080\");\n        d3.selectAll(\"text\").style(\"fill\", \"black\");\n    } else if (step == \"afgh02\") {\n        updateTree(\"589\");\n    } else if (step == \"afgh03\") {\n        updateTree(\"1845\");\n    } else if (step == \"afgh03\") {\n    }\n\n    let selectedAgt = \"\";\n\n    $: options = agt_list.map((d) => ({\n        label: d.Agt,\n        value: d.AgtId,\n        group: d.Con,\n    }));\n\n    const groupBy = (item) => item.group;\n\n    function handleSelect(event) {\n        const value = event.detail.value;\n        // highlight selected\n        updateTree(value);\n    }\n\n    function openAgreement() {\n        if (currentUrl) {\n            window.open(currentUrl, \"_blank\");\n        } else {\n            alert(\"No agreement selected yet\");\n        }\n    }\n</script>\n\n<div class=\"wrapper\" bind:clientWidth={width} bind:clientHeight={height}>\n    <Select\n        class=\"selector\"\n        items={options}\n        {groupBy}\n        bind:value={selectedAgt}\n        on:select={handleSelect}\n        --width=\"250px\"\n        --border-radius=\"3px\"\n        --placeholder-color=\"white\"\n        --background=\"#333333\"\n        --list-background=\"white\"\n        --item-color=\"black\"\n        --border=\"1px solid #999999\"\n        --multi-item-color=\"black\"\n        --item-hover-bg=\"gray\"\n        --font-size=\"14px\"\n        --font-weight=\"300\"\n        placeholder=\"Select agreement...\"\n    />\n    <button id=\"select_agt\" on:click={openAgreement}> See Agreement </button>\n    {#if root}\n        <svg {width} {height}>\n            <g transform=\"translate({width / 2}, {height / 2})\">\n                <!-- Render Links between nodes -->\n                {#each root.links() as link}\n                    <path\n                        d={linksGenerator(link)}\n                        class=\"link {link.target.data.key}\"\n                    ></path>\n                {/each}\n\n                <!-- Render Nodes (circles) -->\n                {#each root.descendants() as node}\n                    <Circle {node} {categories} />\n                {/each}\n            </g>\n        </svg>\n    {/if}\n</div>\n\n<style>\n    .wrapper {\n        height: 90vh;\n        position: relative;\n    }\n\n    :global(.selector) {\n        position: absolute !important;\n        top: 0px;\n        right: 5px;\n    }\n\n    :global(.svelte-select-list) {\n        width: 500px !important;\n    }\n\n    path {\n        fill: none;\n        stroke: #808080;\n        stroke-width: 1;\n    }\n\n    #select_agt {\n        position: absolute;\n        top: 0px;\n        right: 257px;\n        height: 42px;\n        visibility: hidden;\n        cursor: pointer;\n        font-family: \"Montserrat\";\n        font-weight: 500;\n    }\n</style>\n",
    "<script>\n    import { createEventDispatcher } from \"svelte\";\n    import * as d3 from \"d3\";\n    import { LayerCake, Svg } from \"layercake\";\n    import Map from \"./Map.svelte\";\n    import { years, get_current_isos } from \"../utils\";\n    import Point from \"./Point.svelte\";\n\n    const dispatch = createEventDispatcher();\n\n    export let pax;\n    export let mygeojson;\n    export let pax_timeline;\n    export let pax_gender;\n    export let step;\n    // export let central_points;\n\n    let transform = d3.zoomIdentity;\n    let newTransform;\n\n    let width = 400;\n    let height = 400;\n    let cumulative_isos;\n    let innerWidth, innerHeight, xScale, yScale;\n    let margin = { top: 20, right: 100, bottom: 20, left: 100 };\n\n    $: projection = d3.geoNaturalEarth1().fitSize([innerWidth, innerHeight], mygeojson);\n    $: pathGenerator = d3.geoPath(projection);\n\n    let countries = [];\n    $: if (mygeojson)\n        countries = mygeojson.features.map((feature) => {\n            return {\n                ...feature,\n                path: pathGenerator(feature),\n                bounds: pathGenerator.bounds(feature),\n                centroid: pathGenerator.centroid(feature), // Get the country's central point\n            };\n        });\n\n    let afg;\n    let x0, y0, x1, y1;\n    $: if (countries.length > 0) {\n        afg = countries.find((d) => d.properties.admin == \"Afghanistan\");\n        [[x0, y0], [x1, y1]] = afg.bounds;\n    }\n\n    $: innerWidth = width - margin.left - margin.right;\n    $: innerHeight = height - margin.top - margin.bottom;\n\n    $: xScale = d3\n        .scaleBand()\n        .domain(years)\n        .range([0, innerWidth])\n        .padding(0.1);\n\n    $: yScale = d3.scaleLinear().domain([0, 100]).range([innerHeight, 0]);\n\n    // zoom to afghanistan\n    function smoothZoom(newTransform) {\n        const interpolate = d3.interpolateTransformSvg(transform, newTransform);\n        d3.transition()\n            .duration(750)\n            .tween(\"zoom\", () => (t) => {\n                transform = interpolate(t);\n            });\n    }\n\n    //initial functions\n    $: if (pax) {\n        // current_central_points = get_current_central_points(pax);\n        cumulative_isos = get_current_isos(pax);\n        dispatch(\"mapLoaded\");\n    }\n\n    //steps\n    $: if (step == \"map_one\") {\n        cumulative_isos = get_current_isos(pax);\n    } else if (step == \"map_two\") {\n        cumulative_isos = get_current_isos(pax_gender);\n        cumulative_isos = cumulative_isos.filter((entry) => entry.count > 1);\n        // current_central_points = get_current_central_points(pax_gender);\n        smoothZoom(d3.zoomIdentity);\n    } else if (step == \"map_three\") {\n        cumulative_isos = [{ iso: \"AFG\", count: 30 }];\n        newTransform = d3.zoomIdentity\n            .translate(width / 2, height / 2)\n            .scale(\n                Math.min(\n                    2,\n                    0.9 / Math.max((x1 - x0) / width, (y1 - y0) / height),\n                ),\n            )\n            .translate(-(x0 + x1) / 2, -(y0 + y1) / 2);\n\n        smoothZoom(newTransform);\n        // let just_quotas = d3.groups(pax, (d) => d.WggIntLaw);\n        // cumulative_isos = get_current_isos(just_quotas[1][1]);\n        // // current_central_points = get_current_central_points(pax_gender);\n    } else if (step == \"map_four\") {\n        // let just_quotas = d3.groups(pax, (d) => d.WggUnsc);\n        // cumulative_isos = get_current_isos(just_quotas[1][1]);\n        // current_central_points = get_current_central_points(pax_gender);\n    }\n\n    function formatMobile(tick) {\n        return \"'\" + tick.toString().slice(-2);\n    }\n</script>\n\n{#if mygeojson && pax_timeline}\n    <div class=\"wrapper\" bind:clientWidth={width} bind:clientHeight={height}>\n        {#if mygeojson}\n            <LayerCake>\n                <Svg>\n                    <Map {countries} {transform} {cumulative_isos} {margin} />\n                </Svg>\n            </LayerCake>\n        {/if}\n    </div>\n{/if}\n\n<style>\n    .wrapper {\n        height: 90vh;\n        position: relative;\n    }\n</style>\n",
    "<script>\n    import { tweened } from \"svelte/motion\";\n    import { cubicOut } from \"svelte/easing\";\n    import { createEventDispatcher } from \"svelte\"; // Import the dispatcher\n\n    export let x;\n    export let y;\n    export let id;\n    export let width;\n    export let height;\n    export let info;\n    export let i;\n\n    const dispatch = createEventDispatcher();\n\n    // Define position tween parameters with staggered delay\n    const positionTweenParams = {\n        delay: (i / 4) * Math.random(), // Delay increases with index\n        duration: 300,\n        easing: cubicOut,\n    };\n\n    const tX = tweened(null, positionTweenParams);\n    const tY = tweened(null, positionTweenParams);\n    const tWidth = tweened(null, { duration: 300, easing: cubicOut });\n    const tHeight = tweened(null, positionTweenParams);\n\n    // Update position tweens after size animation completes\n    $: tX.set(x);\n    $: tY.set(y);\n    $: tWidth.set(width);\n    $: tHeight.set(height);\n\n    // Hover state for adding a class\n    let isHovered = false;\n\n    const handleMouseEnter = () => {\n        isHovered = true;\n        // Dispatch the custom event with necessary data\n        dispatch(\"hover\", { x, y, info });\n    };\n\n    const handleMouseLeave = () => {\n        setTimeout(() => {\n            isHovered = false;\n        }, 0); // Delay before transitioning back\n        // Dispatch the custom event to clear the tooltip\n        dispatch(\"leave\");\n    };\n</script>\n\n<g transform=\"translate({$tX} {$tY})\">\n    <rect\n        id={\"id_\" + id}\n        x=\"0\"\n        y=\"0\"\n        width={$tWidth}\n        height={$tHeight}\n        rx=\"1\"\n        fill=\"#333333\"\n        stroke=\"gray\"\n        stroke-width=\"0.5\"\n        class:is-hovered={isHovered}\n        on:mouseenter={handleMouseEnter}\n        on:mouseleave={handleMouseLeave}\n    />\n</g>\n\n<style>\n    rect {\n        fill: #333333;\n        transition: fill 0.3s cubic-bezier(0.25, 0.1, 0.25, 1);\n    }\n\n    rect.is-hovered {\n        fill: red;\n    }\n</style>\n",
    "<script>\n    import * as d3 from \"d3\";\n    import { years, full_grid, full_grid_filter } from \"../utils\";\n    // import Background from \"./BackgroundRectangle.svelte\";\n    // import IndividualRectangle from \"./IndividualRectangle.svelte\";\n\n    // canvas variation\n    import Canvas from \"./Canvas.svelte\";\n    import CanvasRectangle from \"./CanvasRectangle.svelte\";\n    import CanvasBackground from \"./CanvasBackground.svelte\";\n\n    export let pax;\n    export let step;\n\n    let tooltip = { visible: false, x: 0, y: 0, info: \"\" }; // Tooltip state\n    let width = 400;\n    let height = 400;\n    let rendered_data;\n    let background_data;\n    let initialPaxCount;\n    let innerWidth, innerHeight, xScale, yScale;\n    const margin = { top: 20, right: 80, bottom: 20, left: 100 };\n\n    $: innerWidth = width - margin.left - margin.right;\n    $: innerHeight = height - margin.top - margin.bottom;\n\n    $: xScale = d3\n        .scaleBand()\n        .domain(years)\n        .range([0, innerWidth])\n        .padding(0.1);\n\n    $: yScale = d3.scaleLinear().domain([0, 100]).range([innerHeight, 0]);\n\n    //initial functions\n    $: if (pax) {\n        //prepare the initial grid\n        initialPaxCount = pax.length;\n        rendered_data = full_grid(\n            pax,\n            innerHeight,\n            innerWidth,\n            initialPaxCount,\n        );\n        //background rect outlines\n        background_data = full_grid(\n            pax,\n            innerHeight,\n            innerWidth,\n            initialPaxCount,\n        );\n    }\n\n    //steps\n    $: if (step == \"rect01\") {\n        // full grid\n        rendered_data = full_grid(\n            pax,\n            innerHeight,\n            innerWidth,\n            initialPaxCount,\n        );\n    } else if (step == \"rect02\") {\n        //full grid gender\n        rendered_data = full_grid_filter(\n            pax,\n            innerHeight,\n            innerWidth,\n            initialPaxCount,\n        );\n    }\n\n    function formatMobile(tick) {\n        return \"'\" + tick.toString().slice(-2);\n    }\n\n    // Event handlers for tooltip\n    const handleHover = (event) => {\n        let dyn_x;\n        let dyn_y;\n        if (event.detail.x >= innerWidth / 2) {\n            dyn_x = event.detail.x - 140;\n        } else if (event.detail.x < innerWidth / 2) {\n            dyn_x = event.detail.x + 70;\n        }\n\n        if (event.detail.y >= innerHeight / 2) {\n            dyn_y = event.detail.y - 50;\n        } else if (event.detail.y < innerHeight / 2) {\n            dyn_y = event.detail.y;\n        }\n\n        tooltip = {\n            visible: true,\n            x: dyn_x,\n            y: dyn_y,\n            info: event.detail.info,\n        };\n    };\n\n    const handleLeave = () => {\n        tooltip = { ...tooltip, visible: false };\n    };\n</script>\n\n{#if rendered_data}\n    <div class=\"wrapper\" bind:clientWidth={width} bind:clientHeight={height}>\n        <!-- <svg {width} {height}>\n            <g\n                class=\"timeline\"\n                transform=\"translate({margin.left}, {margin.top})\"\n            >\n                {#each background_data as d, i}\n                    <Background\n                        {i}\n                        x={d.x}\n                        y={d.y}\n                        width={d.width}\n                        height={d.height}\n                    />\n                {/each}\n                {#each rendered_data as d, i}\n                    <IndividualRectangle\n                        {i}\n                        x={d.x}\n                        y={d.y}\n                        width={d.width}\n                        height={d.height}\n                        info={d.info}\n                        id={d.id}\n                        on:hover={handleHover}\n                        on:leave={handleLeave}\n                    />\n                {/each}\n            </g>\n        </svg> -->\n        <Canvas {width} {height} --position=\"absolute\">\n            {#each background_data as d, i}\n                <CanvasBackground\n                    x={d.x}\n                    y={d.y}\n                    width={d.width}\n                    height={d.height}\n                    margin={margin}\n                />\n            {/each}\n        </Canvas>\n        <Canvas {width} {height}>\n            {#each rendered_data as d, i}\n                <CanvasRectangle\n                    {i}\n                    x={d.x}\n                    y={d.y}\n                    width={d.width}\n                    height={d.height}\n                    margin={margin}\n                />\n            {/each}\n        </Canvas>\n\n        {#if tooltip.visible}\n            <div\n                class=\"tooltip\"\n                style=\"position: absolute; left: {tooltip.x}px; top: {tooltip.y}px;\"\n            >\n                <p>{tooltip.info}</p>\n            </div>\n        {/if}\n    </div>\n{/if}\n\n<style>\n    .wrapper {\n        height: 90vh;\n        position: relative;\n    }\n\n    .tooltip {\n        background-color: rgba(0, 0, 0, 0.9);\n        color: white;\n        padding: 10px;\n        border-radius: 2px;\n        pointer-events: none;\n        transition: opacity 0.3s ease;\n        width: 150px;\n    }\n\n    p {\n        margin: 5px;\n        font-size: 12px;\n    }\n</style>\n",
    "<script>\n    import IndividualRectangle from \"./IndividualRectangle.svelte\";\n    import Background from \"./BackgroundRectangle.svelte\";\n    import * as d3 from \"d3\";\n    import { fade } from \"svelte/transition\";\n    import { years, pax_stages_grid, pax_stages_filter_grid } from \"../utils\";\n    import Canvas from \"./Canvas.svelte\";\n    import CanvasRectangle from \"./CanvasRectangle.svelte\";\n    import CanvasBackground from \"./CanvasBackground.svelte\";\n\n    export let pax;\n    export let pax_stages;\n    export let step;\n\n    let tooltip = { visible: false, x: 0, y: 0, info: \"\" };\n    let width = 400;\n    let imageSource = null;\n    let exampleImg;\n    let imageX;\n    let imageHeight;\n    let height = 400;\n    let rendered_data;\n    let background_data;\n    let initialPaxCount;\n    let innerWidth, innerHeight, xScale, yScale;\n    let stages = [\n        \"Pre-Negotiation\",\n        \"Ceasefire\",\n        \"Partial\",\n        \"Comprehensive\",\n        \"Implementation\",\n        \"Renewal\",\n        \"Other\",\n    ];\n\n    let margin = { top: 20, right: 80, bottom: 20, left: 100 };\n\n    $: innerWidth = width - margin.left - margin.right;\n    $: innerHeight = height - margin.top - margin.bottom;\n    $: column_width = innerWidth / 7;\n\n    $: xScale = d3\n        .scaleBand()\n        .domain(years)\n        .range([0, innerWidth])\n        .padding(0.1);\n\n    $: yScale = d3.scaleLinear().domain([0, 100]).range([innerHeight, 0]);\n\n    //initial functions\n    $: if (pax && pax_stages) {\n        //prepare the initial grid\n        initialPaxCount = pax.length;\n        rendered_data = pax_stages_grid(pax_stages, innerHeight, innerWidth);\n        background_data = pax_stages_grid(pax_stages, innerHeight, innerWidth);\n    }\n\n    //steps\n    $: if (step == \"stage01\") {\n        //full stages\n        rendered_data = pax_stages_grid(pax_stages, innerHeight, innerWidth);\n    } else if (step == \"stage02\") {\n        //gender stages\n        rendered_data = pax_stages_filter_grid(\n            pax_stages,\n            innerHeight,\n            innerWidth,\n            \"GeWom\",\n        );\n        imageSource = null;\n    } else if (step == \"stage03\") {\n        imageSource = \"./img/africa.png\";\n    }\n\n    function formatMobile(tick) {\n        return \"'\" + tick.toString().slice(-2);\n    }\n\n    // Function to update the height of the image\n    function updateImageHeight() {\n        if (exampleImg) {\n            const rect = exampleImg.getBoundingClientRect();\n            imageHeight = rect.height; // Image height\n            imageX = rect.x; // Image x position\n        }\n    }\n\n    let lineEnd;\n    $: if (innerHeight) {\n        lineEnd = innerHeight - (innerHeight - imageHeight);\n    }\n</script>\n\n{#if rendered_data}\n    <div class=\"wrapper\" bind:clientWidth={width} bind:clientHeight={height}>\n        <svg {width} {height}>\n            <g\n                class=\"timeline\"\n                transform=\"translate({margin.left}, {margin.top})\"\n            >\n                {#each stages as d, i}\n                    <text\n                        x={column_width * i + column_width / 2}\n                        y={innerHeight + 14}\n                        text-anchor=\"middle\"\n                        font-family=\"Montserrat\"\n                        fill=\"black\"\n                        font-size=\"14px\">{d}</text\n                    >\n                {/each}\n                <!--\n                {#each background_data as d, i}\n                    <Background\n                        {i}\n                        x={d.x}\n                        y={d.y}\n                        width={d.width}\n                        height={d.height}\n                    />\n                {/each}\n\n                {#each rendered_data as d, i}\n                    <IndividualRectangle\n                        {i}\n                        x={d.x}\n                        y={d.y}\n                        width={d.width}\n                        height={d.height}\n                        info={d.info}\n                        id={d.id}\n                        on:hover={handleHover}\n                        on:leave={handleLeave}\n                    />\n                {/each}\n            </g> -->\n                {#if imageSource}\n                    {#if lineEnd}\n                        <path\n                            d={`M ${column_width * 2},${innerHeight - 30} \n                       C ${column_width * 2},${innerHeight - 100} \n                         ${imageX},${lineEnd + 100} \n                         ${imageX},${lineEnd}`}\n                            fill=\"none\"\n                            stroke=\"black\"\n                            stroke-width=\"1\"\n                            transition:fade={{ duration: 400 }}\n                        />\n                    {/if}\n                {/if}\n            </g></svg\n        >\n        <div style=\"position: absolute; top: 0; left: 0;\">\n            <Canvas {width} {height} --position=\"absolute\">\n                {#each background_data as d, i}\n                    <CanvasBackground\n                        x={d.x}\n                        y={d.y}\n                        width={d.width}\n                        height={d.height}\n                        {margin}\n                    />\n                {/each}\n            </Canvas>\n            <Canvas {width} {height}>\n                {#each rendered_data as d, i}\n                    <CanvasRectangle\n                        {i}\n                        x={d.x}\n                        y={d.y}\n                        width={d.width}\n                        height={d.height}\n                        {margin}\n                    />\n                {/each}\n            </Canvas>\n        </div>\n\n        <div id=\"example_stage\">\n            {#if imageSource}\n                <img\n                    class=\"img\"\n                    src={imageSource}\n                    alt=\"agt\"\n                    bind:this={exampleImg}\n                    transition:fade={{ duration: 400 }}\n                    on:load={updateImageHeight}\n                />\n            {/if}\n        </div>\n    </div>\n{/if}\n\n<style>\n    .wrapper {\n        height: 90vh;\n        position: relative;\n    }\n\n    #example_stage {\n        position: absolute;\n        top: 0;\n        left: 0;\n        width: 100%;\n        height: 100%;\n        display: flex;\n        justify-content: center;\n        overflow: hidden;\n        transition: 0.2s ease;\n        pointer-events: none;\n    }\n\n    #example_stage img {\n        position: absolute;\n        background-color: #33333399;\n        border-radius: 5px;\n        top: 0px;\n        max-width: 80%;\n        padding: 10px;\n        height: auto;\n        display: block;\n    }\n</style>\n",
    "<script>\r\n    // import IndividualRectangle from \"./IndividualRectangle.svelte\";\r\n    // import Background from \"./BackgroundRectangle.svelte\";\r\n    import * as d3 from \"d3\";\r\n    import { fade } from \"svelte/transition\";\r\n    import { years } from \"../utils\";\r\n    import Canvas from \"./Canvas.svelte\";\r\n    import CanvasRectangle from \"./CanvasRectangle.svelte\";\r\n    import CanvasBackground from \"./CanvasBackground.svelte\";\r\n\r\n    export let pax;\r\n    export let pax_timeline;\r\n    export let step;\r\n\r\n    let width = 400;\r\n    let height = 400;\r\n    let rendered_data;\r\n    let background_data;\r\n    let innerWidth, innerHeight, xScale, yScale;\r\n    let imageX;\r\n    let imageSource = null;\r\n    let exampleImg;\r\n    let imageHeight;\r\n    let margin = { top: 20, right: 80, bottom: 20, left: 100 };\r\n\r\n    $: innerWidth = width - margin.left - margin.right;\r\n    $: innerHeight = height - margin.top - margin.bottom;\r\n\r\n    // Attach event listener to window resize\r\n    window.addEventListener(\"resize\", updateImageHeight);\r\n\r\n    $: xScale = d3\r\n        .scaleBand()\r\n        .domain(years)\r\n        .range([0, innerWidth])\r\n        .padding(0.1);\r\n\r\n    $: yScale = d3.scaleLinear().domain([0, 100]).range([innerHeight, 0]);\r\n\r\n    function position_calc(pax, innerWidth, filter) {\r\n        let previousYear = null; // Track the last year seen\r\n        let index;\r\n        index = filter === \"none\" ? 0 : -1;\r\n\r\n        let calculated_positions = pax.map((d) => {\r\n            let yPosition;\r\n\r\n            const currentYear = d.Dat.substring(0, 4);\r\n            // Reset index if the year has changed\r\n            if (currentYear !== previousYear) {\r\n                index = filter === \"none\" ? 0 : -1;\r\n                previousYear = currentYear;\r\n            }\r\n\r\n            if (filter == \"none\") {\r\n                yPosition = yScale(index);\r\n            } else {\r\n                yPosition =\r\n                    d[filter] === \"1\" ? yScale(++index) : innerHeight + 100;\r\n            }\r\n\r\n            const result = {\r\n                x: xScale(currentYear) + Math.random() * 2 - 1,\r\n                y: yPosition + Math.random() * 2 - 1,\r\n                width: xScale.bandwidth(),\r\n                height: 3,\r\n                info: d.Agt,\r\n                id: d.AgtId,\r\n            };\r\n\r\n            if (filter === \"none\") index++;\r\n            return result;\r\n        });\r\n        return calculated_positions;\r\n    }\r\n\r\n    let agt_path_year = \"1999\";\r\n    //initial functions\r\n    $: if (pax) {\r\n        // background unfilled rectangles\r\n        background_data = position_calc(pax, innerWidth, \"none\");\r\n        // filled rectangles\r\n        rendered_data = position_calc(pax, innerWidth, \"none\");\r\n    }\r\n\r\n    //steps\r\n    $: if (step == \"1\") {\r\n        // all agreements\r\n        rendered_data = position_calc(pax, innerWidth, \"none\");\r\n    } else if (step == \"4\") {\r\n        imageSource = null; // hide image\r\n        rendered_data = position_calc(pax, innerWidth, \"WggRehab\");\r\n    } else if (step == \"5\") {\r\n        imageSource = \"./img/lome.png\";\r\n        agt_path_year = \"1999\";\r\n        rendered_data = position_calc(pax, innerWidth, \"WggRehab\");\r\n    } else if (step == \"6\") {\r\n        imageSource = null;\r\n        rendered_data = position_calc(pax, innerWidth, \"WggImplRole\");\r\n    } else if (step == \"7\") {\r\n        imageSource = \"./img/colombia.png\";\r\n        agt_path_year = \"2016\";\r\n        rendered_data = position_calc(pax, innerWidth, \"WggImplRole\");\r\n    } else if (step == \"8\") {\r\n        imageSource = null;\r\n        rendered_data = position_calc(pax, innerWidth, \"WggHR\");\r\n    } else if (step == \"9\") {\r\n        imageSource = \"./img/guatemala.png\";\r\n        agt_path_year = \"1996\";\r\n    }\r\n\r\n    function formatMobile(tick) {\r\n        return \"'\" + tick.toString().slice(-2);\r\n    }\r\n\r\n    // Function to update the height of the image\r\n    function updateImageHeight() {\r\n        if (exampleImg) {\r\n            const rect = exampleImg.getBoundingClientRect();\r\n            imageHeight = rect.height; // Image height\r\n            imageX = rect.x; // Image x position\r\n        }\r\n    }\r\n\r\n    let lineEnd;\r\n    $: if (innerHeight) {\r\n        lineEnd = innerHeight - (innerHeight - imageHeight);\r\n    }\r\n\r\n    // Call the function on initial load to set the height\r\n    updateImageHeight();\r\n</script>\r\n\r\n{#if rendered_data && pax_timeline}\r\n    <div class=\"wrapper\" bind:clientWidth={width} bind:clientHeight={height}>\r\n        <svg {width} {height}>\r\n            <g\r\n                class=\"timeline\"\r\n                transform=\"translate({margin.left}, {margin.top})\"\r\n            >\r\n                <g class=\"axis x-axis\">\r\n                    {#each years as tick}\r\n                        <g\r\n                            class=\"tick tick-{tick}\"\r\n                            transform=\"translate({xScale(tick) +\r\n                                xScale.bandwidth() / 2},{innerHeight + 15})\"\r\n                        >\r\n                            <text y=\"1\"\r\n                                >{innerWidth > 800\r\n                                    ? tick\r\n                                    : formatMobile(tick)}</text\r\n                            >\r\n                        </g>\r\n                    {/each}\r\n                </g>\r\n                <!--\r\n                {#each background_data as d, i}\r\n                    <Background\r\n                        {i}\r\n                        x={d.x}\r\n                        y={d.y}\r\n                        width={d.width}\r\n                        height={d.height}\r\n                    />\r\n                {/each}\r\n                {#each rendered_data as d, i}\r\n                    <IndividualRectangle\r\n                        {i}\r\n                        id={d.id}\r\n                        x={d.x}\r\n                        y={d.y}\r\n                        width={d.width}\r\n                        height={d.height}\r\n                        info={d.info}\r\n                        on:hover={handleHover}\r\n                        on:leave={handleLeave}\r\n                    />\r\n                {/each}-->\r\n\r\n                {#if imageSource}\r\n                    {#if lineEnd}\r\n                        <path\r\n                            d={`M ${xScale(agt_path_year)},${innerHeight - 10} \r\n                       C ${xScale(agt_path_year)},${innerHeight - 100} \r\n                         ${imageX - margin.left},${lineEnd + 100} \r\n                         ${imageX - margin.left},${lineEnd}`}\r\n                            fill=\"none\"\r\n                            stroke=\"black\"\r\n                            stroke-width=\"1\"\r\n                            transition:fade={{ duration: 400 }}\r\n                        />\r\n                    {/if}\r\n                {/if}\r\n            </g>\r\n        </svg>\r\n\r\n        <div style=\"position: absolute; top: 0; left: 0;\">\r\n            <Canvas {width} {height} --position=\"absolute\">\r\n                {#each background_data as d, i}\r\n                    <CanvasBackground\r\n                        x={d.x}\r\n                        y={d.y}\r\n                        width={d.width}\r\n                        height={d.height}\r\n                        {margin}\r\n                    />\r\n                {/each}\r\n            </Canvas>\r\n            <Canvas {width} {height}>\r\n                {#each rendered_data as d, i}\r\n                    <CanvasRectangle\r\n                        {i}\r\n                        x={d.x}\r\n                        y={d.y}\r\n                        width={d.width}\r\n                        height={d.height}\r\n                        {margin}\r\n                    />\r\n                {/each}\r\n            </Canvas>\r\n        </div>\r\n\r\n        <div id=\"example\">\r\n            {#if imageSource}\r\n                <img\r\n                    class=\"example_img\"\r\n                    src={imageSource}\r\n                    alt=\"agt\"\r\n                    bind:this={exampleImg}\r\n                    transition:fade={{ duration: 400 }}\r\n                    on:load={updateImageHeight}\r\n                />\r\n            {/if}\r\n        </div>\r\n    </div>\r\n{/if}\r\n\r\n<style>\r\n    .wrapper {\r\n        height: 90vh;\r\n        position: relative;\r\n    }\r\n    .tick {\r\n        font-size: 0.725em;\r\n        font-weight: 200;\r\n    }\r\n\r\n    .un_resolution {\r\n        visibility: hidden;\r\n    }\r\n\r\n    .tick text {\r\n        fill: black;\r\n        text-anchor: start;\r\n        font-size: 10px;\r\n        font-family: \"Montserrat\";\r\n        font-weight: 400;\r\n    }\r\n\r\n    @media only screen and (max-width: 1200px) {\r\n        .tick text {\r\n            font-size: 11px;\r\n        }\r\n    }\r\n\r\n    @media only screen and (max-width: 768px) {\r\n        .tick text {\r\n            font-size: 10px;\r\n        }\r\n    }\r\n\r\n    .x-axis .tick text {\r\n        text-anchor: middle;\r\n    }\r\n\r\n    #example {\r\n        position: absolute;\r\n        top: 0;\r\n        left: 0;\r\n        width: 100%;\r\n        height: 100%;\r\n        display: flex;\r\n        justify-content: center;\r\n        overflow: hidden;\r\n        transition: 0.2s ease;\r\n        pointer-events: none;\r\n    }\r\n\r\n    #example img {\r\n        position: absolute;\r\n        background-color: #33333399;\r\n        border-radius: 5px;\r\n        top: 0px;\r\n        max-width: 80%;\r\n        padding: 10px;\r\n        height: auto;\r\n        display: block;\r\n    }\r\n\r\n    .un_resolution {\r\n        visibility: hidden;\r\n    }\r\n</style>\r\n"
  ],
  "names": [],
  "mappings": "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"
}